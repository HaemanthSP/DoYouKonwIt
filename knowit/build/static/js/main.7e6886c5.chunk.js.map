{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","HOST","App","props","signup","event","preventDefault","stateData","state","user","firstname","firstName","lastname","lastName","middlename","middleName","role","teacher","email","dob","setState","isLoading","axios","post","then","response","activePage","data","isValid","message","defineExperiment","password","experiment","login","getTeacherReport","getTests","getLevels","username","levels","tests","activeTestIndex","index","wordList","getWordList","activeWordIndex","selections","result","handleChange","evt","target","name","value","testsets","selection","studentResults","teacherReport","expName","aStudentResult","metrics","pages","renderLogin","bind","renderSignup","renderDashboard","renderInstructions","renderAdminDashboard","renderTeacherDashboard","renderTeacherDashboard1","renderActivity","renderIndex","renderLevel","renderReport","renderMiniReport","renderScore","renderThankyou","this","teacher_report","testcode","page","document","addEventListener","handleKeyPress","e","which","choice","length","joined","concat","report","classes","Paper","className","style","background","onClick","onSubmit","marginTop","color","Grid","container","spacing","alignItems","item","md","sm","xs","TextField","label","type","fullWidth","autoFocus","required","onChange","display","justify","Button","variant","textTransform","FormControl","InputLabel","id","Select","labelId","MenuItem","renderHeader","map","width","toString","percentage","Math","floor","renderScoreCell","renderResultTableHeader","renderResultTableEntry","marginBottom","key","borderRadius","testIndex","margin","renderReportCard","nextTest","bgColor","textColor","textAlign","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e6886c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import axios from 'axios';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox, Select, FormControl, InputLabel, MenuItem} from '@material-ui/core';\nimport { Face, Fingerprint } from '@material-ui/icons'\n\nconst styles = theme => ({\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n// var HOST = '134.2.128.120/vocabulary-test/' \nvar HOST = '127.0.0.1:8000' \n\nclass App extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            user: \"Me\",\n\n            // Test session\n            tests: [],\n            testsets: [],\n            activeTestIndex: '',\n\n            // For each test\n            wordList: [],\n            activeWordIndex: 0,\n            selection: \"\",\n            selections: [],\n            levels: [],\n            result: {},\n\n      \t\t\t// Admin exp\n            experiment: \"\",\n            \n            // Teacher\n            studentResults: [],\n            teacherReport: [],\n            expName: \"\",\n            aStudentResult: [],\n            metrics: {},\n\n            // UI Handling\n            isLoading: false,\n            activePage: \"signup\",\n\n            // Login details\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n\t\t\t      role: \"student\",\n            teacher: \"\",\n            email: \"\",\n            password: \"\",\n            dob: \"\",\n\t\t\tmessage: \"\",\n        };\n\n      this.pages = {\n         \"login\": this.renderLogin.bind(this),\n         \"signup\": this.renderSignup.bind(this),\n         \"landing\": this.renderDashboard.bind(this),\n         \"instructions\": this.renderInstructions.bind(this),\n         \"adminlanding\": this.renderAdminDashboard.bind(this),\n         \"teacherlanding\": this.renderTeacherDashboard.bind(this),\n         \"teacherlanding1\": this.renderTeacherDashboard1.bind(this),\n         \"activity\": this.renderActivity.bind(this),\n         \"index\": this.renderIndex.bind(this),\n         \"level\": this.renderLevel.bind(this),\n         \"report\": this.renderReport.bind(this),\n         \"minireport\": this.renderMiniReport.bind(this),\n         \"score\": this.renderScore.bind(this),\n         \"thankyou\": this.renderThankyou.bind(this),\n      }; \n   }\n\n  signup = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      teacher: stateData.teacher,\n      email: stateData.email,\n      dob: stateData.dob\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/signup', user, config)\n      .then(response => {\n        this.setState({activePage: response.data.isValid ? \"login\" : 'signup',\n\t\t\t\t\t   message: response.data.message,\n                       isLoading: false})\n      })\n  }\n\n  defineExperiment = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n\t    experiment: stateData.experiment\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/defineexp', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       isLoading: false})\n      })\n  }\n  \n  login = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      password: stateData.password\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/login', user, config)\n      .then(response => {\n\t  if (response.data.isValid) {\n\t\t  if (response.data.role === 'Admin') {\n\t\t  \tthis.setState({role: 'Admin',\n\t\t\t\t\t\t   activePage: 'adminlanding',\n                           password: response.data.password,\n\t\t\t\t\t\t   isLoading: false});\n      }\n      else if(response.data.role === 'Teacher') {\n        this.setState({\n          role: 'Teacher',\n          password: response.data.password,\n        });\n        this.getTeacherReport();\n      }\n\t    else {\n\t  \t  this.getTests();\n      }\n\t\t}\n\t  else {\n        this.setState({\n\t\t\t// activePage: response.data.isValid ? 'activity': 'login',\n\t\t\tactivePage: 'login',\n\t\t\tmessage: response.data.message,\n            password: response.data.password,\n            isLoading: false});\n\t    }\n      })\n  }\n\n  getTeacherReport() {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getteacherreport', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       teacherReport: response.data.teacher_report,\n                       isLoading: false,\n                       activePage: 'teacherlanding'\n                       })\n      })\n  }\n  update(selections) {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      testcode: this.state.tests[this.state.activeTestIndex]['test_code'],\n      selections: selections\n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/updateresponse', user, config)\n      .then(response => {\n        this.setState({message: response.data.message\n                       })\n      })\n  }\n\n  report(selections, page) {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      selections: selections,\n      testcode: this.state.tests[this.state.activeTestIndex]['test_code'],\n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getresult', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       result: response.data.result,\n                       activePage: page\n            })\n      })\n  }\n\n  getLevels = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getlevels', user, config)\n      .then(response => {\n        this.setState({\n          levels: response.data.levels,\n          isLoading: false,\n          activePage: \"index\",\n        })\n      })\n  }\n\n  getTests = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/gettests', user, config)\n      .then(response => {\n        this.setState({\n          tests: response.data.tests,\n          isLoading: false,\n          activeTestIndex: response.data.index,\n          wordList: response.data.tests[response.data.index]['tokens'],\n          // activePage: \"activity\"\n          activePage: \"instructions\"\n        })\n      })\n  }\n\n  getWordList = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getwordlist', user, config)\n      .then(response => {\n        this.setState({\n          wordList: response.data.wordList,\n          activeWordIndex: 0,\n          selections: [],\n          isLoading: false,\n          activePage: \"activity\",\n          result: {}\n        })\n      })\n  }\n\n  componentWillMount() {\n    this.setState({activePage: 'signup'});\n    document.addEventListener(\"keyup\", this.handleKeyPress.bind(this));\n  }\n\n  handleKeyPress (e) {\n    if (e.which === 89) { \n       this.selection(\"yes\")\n    }\n    else if (e.which === 78) {\n       this.selection(\"no\")\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  selection (choice) {\n\tif (this.state.activeWordIndex + 1 <= this.state.wordList.length) {\n    var joined = this.state.selections.concat(choice);\n    var page = this.state.activePage\n    if(joined.length >= this.state.wordList.length && this.state.wordList.length > 0) {\n       // this.update(joined)\n       // page = \"minireport\"\n       page = \"score\"\n       // page = \"report\"\n       this.report(joined, page)\n    }\n\n    this.setState({\n        selection: choice,\n        activeWordIndex: this.state.activeWordIndex + 1,\n        selections: joined,\n        activePage: page\n    })\n   } \n  }\n\n  renderLogin() {\n        const { classes } = this.props;\n    return ( \n\t\t\t <Paper className=\"login_card\">\n\t\t\t   <div className=\"switch_container\">\n\t\t\t     <div className=\"login_switch\" style={{background: \"#47d836\"}} onClick={() => {this.setState({activePage: 'signup', message:\"\"})}}>\n\t\t\t     Signup \n\t\t\t     </div>\n\t\t\t   </div>\n\n\t\t\t   <h1>Login</h1>\n\t\t\t   <form  onSubmit={this.login} style={{marginTop:\"30px\"}}>\n\t\t\t\t\t  <div>\n    \t\t\t\t\t  <div className='authAlert' style={{color: 'blue'}}>{this.state.message}</div>\n\t\t\t\t\t  </div>\n                <div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"firstName\" label=\"First Name\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"middleName\" label=\"Middle Name\" type=\"text\" fullWidth onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"lastName\" label=\"Last Name\" type=\"text\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"password\" label=\"Password\" type=\"password\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '25px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Login</Button>\n                    </Grid>\n                </div>\n\t\t\t  </form>\n            </Paper>\n    );\n  }\n\n  renderSignup() {\n\treturn (\n\t\t\t <Paper className=\"login_card\">\n\t\t\t\t<div className=\"switch_container\">\n\t\t\t\t\t  <div className=\"login_switch\" onClick={() => {this.setState({activePage: 'login', message: \"\"})}}>\n\t\t\t\t\t  Login\n\t\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t   <h1>Signup</h1>\n\t\t\t   <form  onSubmit={this.signup} style={{marginTop:\"30px\"}}>\n\n\t\t\t\t\t  <div>\n    \t\t\t\t\t  <div className='authAlert' style={{color: 'red'}} >{this.state.message}</div>\n\t\t\t\t\t  </div>\n                <div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"firstName\" label=\"First Name\" type=\"text\" fullWidth autoFocus required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"middleName\" label=\"Middle Name\" type=\"text\" fullWidth onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"lastName\" label=\"Last Name\" type=\"text\" fullWidth required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n\t\t\t\t\t<Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n\t\t\t\t\t\t<FormControl fullWidth required>\t\n\t\t\t\t\t\t\t<InputLabel id=\"teachers\">Teacher</InputLabel>\n\t\t\t\t\t\t\t<Select labelId=\"teachers\" name=\"teacher\" value={this.state.teacher} onChange={this.handleChange}>\n\t\t\t\t\t\t\t  <MenuItem value=\"\"><em>None</em></MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbd9e414a94dc67fd995\">Bleicher</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e3454f8cc0b53337bc5fa13\">Meurers</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e34554acc0b53337bc5fa14\">Deeg</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbaae414a94dc67fd994\">Goedicke</MenuItem>\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher3\">Howind</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher4\">Lang</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher5\">Rehberger</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher6\">Spiegelhalter</MenuItem> */}\n\t\t\t\t\t\t\t</Select>\n                        </FormControl>\n\t\t\t\t\t\t </Grid>\n\t\t\t        </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"dob\" label=\"Date of Birth\" type=\"date\" fullWidth required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"email\" label=\"E-mail\" type=\"email\" fullWidth onChange={this.handleChange} />\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Sign up</Button>\n                    </Grid>\n                    <div className=\"card\">\n                      Password: ddmmyyyyabc\n                    <br />\n                      (ddmmyyyy) Date of birth and (abc) first three letters of the name\n                    <br />\n                      for example: <br /> Walter White, 15/10/2004 <br /> <b>15102004wal</b>\n                    </div>\n                </div>\n\t\t\t  </form>\n            </Paper>\n\t);\n  }\n\n  renderHeader() {\n  \treturn (\n\t\t<div>\n\t\t\t<div className='header'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='AppName'>DoYouKnowIt!</div>\n\t\t\t\t\t<div className='username'>{this.state.firstName}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n\n renderDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t\t\t<div className=\"row\">\n\t\t\t<button className=\"dashboardCard\" onClick={this.getLevels}>English vocabulary test </button>\n\t\t\t<button className=\"dashboardCard\" style={{background: \"linear-gradient(45deg, rgb(98, 255, 0), rgba(0, 0, 0, 0.79))\"}}>Science MCQs</button>\n\t\t\t<button className=\"dashboardCard\" style={{background: \"linear-gradient(45deg, rgba(224, 106, 23, 0.92), rgba(6, 3, 222, 0.79))\"}}>Maths Assignment 01</button>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n renderAdminDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t\t\t<div className=\"row\">\n      <div className=\"card\">\n        Choose the testsets within the following range.\n        <br />101-120\n        <br />201-220\n        <br />301-320\n        <br />401-420\n        <br />501-520\n        <br />601-620\n        <br />\n        <br />Example: <b>102;201;311;403;514</b>\n      </div>\n\t\t\t<form onSubmit={this.defineExperiment}>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"experiment\" label=\"Test Sequence\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Save</Button>\n                    </Grid>\n\t\t\t</form>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n renderTeacherDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t\t\t<div className=\"row\">\n          {this.state.teacherReport.map((value, index) => {\n            return (\n              <div className=\"card level_card\"  onClick={() => {this.setState({tests: value['tests'], studentResults:value['results'], expName:value[\"definition\"], activePage: 'teacherlanding1'})}}>\n                {value[\"definition\"]}\n              </div>\n            )\n          })}\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\nrenderScoreCell(result) {\n  function percentageToColor(percentage) {\n  const colors = [\n                   \"#c50000a8\",\n                   \"#c42a00a8\",\n                   \"#c35400a8\",\n                   \"#c27d00a8\",\n                   \"#c1a600a8\",\n                   \"#b2c000a8\",\n                   \"#88bf00a8\",\n                   \"#5fbe00a8\",\n                   \"#36bd00a8\",\n                   \"#0dbc00a8\",\n                   \"#00bb1ba8\",\n                   \"#00bb1ba8\"]\n    return colors[Math.floor(percentage/10)];\n  }\n  return (\n    <div className=\"col-lg-9 row\">\n      {result.map((value, index) => {\n        return(\n          <div className=\"scoreCell card\" style={{width: (100 / result.length).toString() + \"%\", background:percentageToColor(value[\"metrics\"][\"score\"])}}  onClick={() => {this.setState({wordList: this.state.tests[index]['tokens'], metrics:value['metrics'], selections:value['evaluated_responses'], activePage: 'report'})}}>\n            {value[\"metrics\"][\"score\"]}\n          </div>\n        )\n      })\n      }\n    </div>\n  );\n}\n\nrenderResultTableEntry() {\n  return (\n\t  <div>\n        {this.state.studentResults.map((value, index) => {\n          return (\n            <div className=\"row\">\n              <div className=\"scoreRow col-lg-3 card\">\n                 {value[\"name\"]}\n              </div>\n              {this.renderScoreCell(value[\"result\"])}\n            </div>\n          )\n        })}\n\t  </div>\n  )\n}\n\nrenderResultTableHeader() {\n  return (\n\t  <div>\n      <div className=\"row\">\n        <div className=\"scoreRow col-lg-3 card\">\n           Name\n        </div>\n        <div className=\"col-lg-9 row\">\n         {this.state.studentResults[0][\"result\"].map((value, index) => {\n           return(\n              <div className=\"scoreCell card\" style={{width: (100 / this.state.studentResults[0][\"result\"].length).toString() + \"%\"}}>\n               {value['test_code'][5]}&#9734;\n             </div>\n           )\n         })\n         }\n        </div>\n      </div>\n\t  </div>\n  )\n\n}\n\nrenderTeacherDashboard1() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        {this.renderResultTableHeader()}\n        {this.renderResultTableEntry()}\n\t      <div className='row'>\n\t        <button className='button back' onClick={() => {this.setState({activePage: 'teacherlanding'})}}> &#8617; </button>\n\t      </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n  renderActivity() {\n    return (\n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n\t\t<div className=\"checkout-wrap\">\n\t\t  <ul className=\"checkout-bar\">\n          \t{this.state.tests.map((value, index) => {\n            \treturn (\n\t\t\t\t  <li style={{width: (index !== this.state.activeTestIndex? 6 : 100 - (this.state.tests.length - 1) * 6).toString() + '%'}} className={index === this.state.activeTestIndex? 'active' : index < this.state.activeTestIndex? 'visited' : ''}> {value['test_code'][5]}&#9734;</li>\n            \t)\n          \t})}\n\t\t  </ul>\n\t\t</div>\n\t\t<div className=\"content\">\n        <div id=\"progressbar\">\n          <div style={{ width: (this.state.activeWordIndex / this.state.wordList.length) * 100 + \"%\" }}></div>\n        </div>\n        <h1 className=\"word\"> {this.state.wordList[this.state.activeWordIndex]} </h1>\n        <div className=\"col-md-12\">\n          <div className=\"row card_ctr\">\n            <button className=\"button option green\" onClick={() => {this.selection(\"yes\")}}> known (y) </button>\n            <button className=\"button option grey\" onClick={() => {this.selection(\"no\")}}> unknown (n) </button>\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderIndex() {\n    return(\n      \t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t<div className=\"content\">\n\t\t<h1 style={{ marginBottom: 30 }}> Levels </h1>\n        <div className=\"row\">\n          {this.state.levels.map((value, index) => {\n            return (\n              <div className=\"column\" key={index}>\n                <div className=\"card level_card\" style={{borderRadius: 10}} onClick={() => {this.setState({testsets: value['testsets'], activePage: 'level'})}}>\n                  {value['level']}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\t  </div>\n\t </div>\n    );\n  }\n\n  renderLevel() {\n    return(\n      \t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n      <div className=\"content\">\n\t\t<h1 style={{ marginBottom: 30 }}> Testsets </h1>\n        <div className=\"row\">\n          {this.state.testsets.map((value, index) => {\n            return (\n              <div className=\"column\" key={index}>\n                <div className=\"card testset_card\" style={{borderRadius: 10}} onClick={() => {this.setState({wordList: value['tokens'], activePage: 'activity'})}}> {value['test_code']}\n                </div>\n              </div>\n            )\n          })}\n      </div>\n\t  <br />\n\t  <br />\n\t  <br />\n\t  <br />\n\t  <div className='row'>\n\t  <button className='button back' onClick={() => {this.setState({activePage: 'index'})}}> &#8617; </button>\n\t  </div>\n\t</div>\n\t</div>\n    );\n  }\n\n  nextTest() {\n    var testIndex = this.state.activeTestIndex + 1;\n    if(testIndex < this.state.tests.length) {\n      this.setState({\n        activeTestIndex: testIndex,\n        wordList: this.state.tests[testIndex]['tokens'],\n        activeWordIndex: 0,\n        selection: \"\",\n        selections: [],\n        levels: [],\n        result: {},\n        activePage: 'activity'})\n    }\n    else {\n      this.setState({\n        activeTestIndex: 0,\n        activeWordIndex: 0,\n        selection: \"\",\n        selections: [],\n        levels: [],\n        result: {},\n        activePage: 'thankyou'})\n    }\n  }\n\n  renderInstructions() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        <div className=\"instruct\"> <b> Read through the list of words carefully. For each word: </b> <br /> <br />\n                                   if you know what it means, click 'y' key or <button className=\"button option green\"> known (y) </button> (for YES)  <br /> <br />\n                                   if you don't know what it means, or if you aren't sure, click 'n' or click <button className=\"button option grey\"> unknown (n) </button> key (for NO).</div>\n\t      <div>\n           <br />\n           <button style={{borderRadius: 10}} style={{borderRadius: 10, margin:\"40px auto\"}} onClick={() => {this.setState({activePage: 'activity'})}} > Continue </button>\n        </div>\n\t\t\t</div>\n      \n\t\t</div>\n\t);\n  }\n\n  renderThankyou() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        <div className=\"thankyou\">Thank You !!!</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n  renderReport() {\n    return (\n      <div>\n\t  \t<br />\n\t  \t<br />\n        <h1> Report </h1>\n\t\t<div className=\"row\">\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>Hits</h4><br />\n\t\t\t    <h2>{this.state.metrics[\"hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>False Hits</h4><br />\n\t\t\t    <h2>{this.state.metrics[\"false_hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>Score</h4><br />\n\t\t\t    <h2>{this.state.metrics[\"score\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n        <div className=\"row\">\n        {this.state.wordList.map((value, index) => {\n          return (\n            <div className=\"column col-md-3 col-sm-4\" key={index}>\n\t\t\t  {this.renderReportCard(index, value)}\n            </div>\n          )\n        })}\n      </div>\n\t    <div className='row'>\n\t      <button className='button back' onClick={() => {this.setState({activePage: 'teacherlanding1'})}}> &#8617; </button>\n\t    </div>\n\t  <br />\n\t  <br />\n      </div>\n    );\n  }\n\n  renderMiniReport() {\n    return ( \n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n\t\t<div className=\"checkout-wrap\">\n\t\t  <ul className=\"checkout-bar\">\n          \t{this.state.tests.map((value, index) => {\n            \treturn (\n\t\t\t\t  <li style={{width: (index !== this.state.activeTestIndex? 6 : 100 - (this.state.tests.length - 1) * 6).toString() + '%'}} className={index === this.state.activeTestIndex? 'active' : index < this.state.activeTestIndex? 'visited' : ''}> {value['test_code'][5]}&#9734;</li>\n            \t)\n          \t})}\n\t\t </ul>\n\t    </div>\n\t  \t<br />\n\t  \t<br />\n\t\t<div className=\"row\">\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>Hits</h4><br />\n\t\t\t    <h2>{this.state.result[\"hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>False Hits</h4><br />\n\t\t\t    <h2>{this.state.result[\"false_hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n        <div className=\"row\">\n           <button style={{borderRadius: 10}} onClick={() => {this.nextTest()}} > Next {this.state.activeTestIndex + 1} </button>\n        </div>\n      </div>\n    );\n  }\n\n  renderScore() {\n    return ( \n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n\t\t<div className=\"checkout-wrap\">\n\t\t  <ul className=\"checkout-bar\">\n          \t{this.state.tests.map((value, index) => {\n            \treturn (\n\t\t\t\t  <li style={{width: (index !== this.state.activeTestIndex? 6 : 100 - (this.state.tests.length - 1) * 6).toString() + '%'}} className={index === this.state.activeTestIndex? 'active' : index < this.state.activeTestIndex? 'visited' : ''}> {value['test_code'][5]}&#9734;</li>\n            \t)\n          \t})}\n\t\t </ul>\n\t    </div>\n\t  \t<br />\n\t  \t<br />\n        <div className=\"scoreboard\">\n\t\t\t<div className=\"row\">\t\n\t\t\t\t<div className=\"scorecard\">{this.state.result[\"score\"]}%</div>\n      </div>\n      <div>\n\t\t\t\t<div className=\"scoreFeedback\">{this.state.result[\"message\"]}</div>\n\t\t\t</div> \n            <div className=\"row\">\n               <button className=\"button\" style={{borderRadius: 10, margin:\"40px auto\"}} onClick={() => {this.nextTest()}} > Next </button>\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderReportCard (index, value) {\n    var selection = this.state.selections[index];\n\tvar bgColor;\n\tvar textColor = \"black\";\n\tif (selection === \"yes\") {\n\t\tbgColor = \"#01a22b88\";\n\t} else if (selection === \"wrong\") {\n\t\tbgColor = \"#c51a0988\";\n  } else if(selection === \"unknown\")\n   {\n\t\tbgColor = \"#004cc5bb\";\n\t\ttextColor = \"white\";\n  } else {\n\t\tbgColor = \"grey\";\n\t\ttextColor = \"white\";\n\t}\n\treturn (\n    \t<div className=\"card report_card\" style={{color: textColor, background: bgColor}}>\n    \t  <h4 style={{textAlign: \"center\", display: \"table-cell\"}}>{value}</h4>\n    \t</div>\n\t );\n  }\n\n  render() {\n    return (\n        <div className= \"container\">\n        {this.pages[this.state.activePage]()}\n        {this.state.isLoading ?\n          <div className=\"overlay\">\n            <div className=\"lds-roller\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div> : null\n        }\n        </div>\n    ); \n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}