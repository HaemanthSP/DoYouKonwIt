{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","HOST","App","props","signup","event","preventDefault","stateData","state","user","firstname","firstName","lastname","lastName","middlename","middleName","role","teacher","email","dob","setState","isLoading","axios","post","then","response","activePage","data","isValid","message","adduser","password","userList","user_list","defineExperiment","experiment","login","experiments","getTeacherReport","getTests","download","exp_id","expId","teacher_id","get","getLevels","username","levels","tests","activeTestIndex","index","wordList","getWordList","activeWordIndex","selections","result","handleChange","evt","target","name","value","testsets","selection","studentResults","teacherReport","expName","aStudentResult","metrics","pages","renderLogin","bind","renderSignup","renderDashboard","renderInstructions","renderAdminDashboard","renderTeacherDashboard","renderTeacherDashboard1","renderActivity","renderIndex","renderLevel","renderReport","renderMiniReport","renderScore","renderThankyou","uid","this","teacher_report","testcode","page","document","addEventListener","handleKeyPress","e","which","choice","length","joined","concat","report","classes","Paper","className","style","background","onClick","onSubmit","marginTop","color","Grid","container","spacing","alignItems","item","md","sm","xs","TextField","label","type","fullWidth","autoFocus","required","onChange","display","justify","Button","variant","textTransform","FormControl","InputLabel","id","Select","labelId","MenuItem","map","width","toString","renderHeader","padding","removeuser","percentage","Math","floor","renderScoreCell","renderResultTableHeader","renderResultTableEntry","renderCheckoutbar","marginBottom","key","borderRadius","testIndex","margin","renderReportCard","nextTest","bgColor","textColor","textAlign","Component","Tabs","clickHandler","active","parseInt","currentTarget","attributes","num","content","tabs","i","text","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e4f4e56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import axios from 'axios';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox, Select, FormControl, InputLabel, MenuItem} from '@material-ui/core';\nimport { Face, Fingerprint } from '@material-ui/icons'\n\nconst styles = theme => ({\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\nvar HOST = '134.2.128.120/vocabulary-test/' \n// var HOST = '127.0.0.1:8080' \n\nclass App extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            user: \"Me\",\n\n            // Test session\n            tests: [],\n            testsets: [],\n            activeTestIndex: '',\n\n            // For each test\n            wordList: [],\n            activeWordIndex: 0,\n            selection: \"\",\n            selections: [],\n            levels: [],\n            result: {},\n\n      \t\t\t// Admin exp\n            experiment: \"\",\n            \n            // Teacher\n            studentResults: [],\n            teacherReport: [],\n            expName: \"\",\n            aStudentResult: [],\n            metrics: {},\n\n            // UI Handling\n            isLoading: false,\n            activePage: \"signup\",\n\n            // Login details\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n\t\t\t      role: \"student\",\n            teacher: \"\",\n            email: \"\",\n            password: \"\",\n            dob: \"\",\n            message: \"\",\n            \n            // User maintenance\n            userList: [],\n        };\n\n      this.pages = {\n         \"login\": this.renderLogin.bind(this),\n         \"signup\": this.renderSignup.bind(this),\n         \"landing\": this.renderDashboard.bind(this),\n         \"instructions\": this.renderInstructions.bind(this),\n         \"adminlanding\": this.renderAdminDashboard.bind(this),\n         \"teacherlanding\": this.renderTeacherDashboard.bind(this),\n         \"teacherlanding1\": this.renderTeacherDashboard1.bind(this),\n         \"activity\": this.renderActivity.bind(this),\n         \"index\": this.renderIndex.bind(this),\n         \"level\": this.renderLevel.bind(this),\n         \"report\": this.renderReport.bind(this),\n         \"minireport\": this.renderMiniReport.bind(this),\n         \"score\": this.renderScore.bind(this),\n         \"thankyou\": this.renderThankyou.bind(this),\n      }; \n   }\n\n  signup = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      teacher: stateData.teacher,\n      email: stateData.email,\n      dob: stateData.dob\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/signup', user, config)\n      .then(response => {\n        this.setState({activePage: response.data.isValid ? \"login\" : 'signup',\n\t\t\t\t\t   message: response.data.message,\n                       isLoading: false})\n      })\n  }\n\n  adduser = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      teacher: stateData.teacher,\n      email: stateData.email,\n      dob: stateData.dob,\n      password: stateData.password\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/adduser', user, config)\n      .then(response => {\n        this.setState({activePage: 'adminlanding',\n                       message: response.data.message,\n                       userList: response.data.user_list, \n                       isLoading: false})\n      })\n  }\n\n  removeuser(uid) {\n    const user = {\n      uid: uid,\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/removeuser', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       userList: response.data.user_list,\n                       isLoading: false})\n      })\n  }\n\n  userList = event => {\n    const user = {\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/userList', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       userList: response.data.user_list,\n                       isLoading: false})\n      })\n  }\n\n  defineExperiment = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n\t    experiment: stateData.experiment\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/defineexp', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       isLoading: false})\n      })\n  }\n  \n  login = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      password: stateData.password\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/login', user, config)\n      .then(response => {\n\t  if (response.data.isValid) {\n\t\t  if (response.data.role === 'Admin') {\n           let stateData = this.state;\n           const user = {\n           };\n           this.setState({ isLoading: true })\n           let config = { \"Content-Type\": \"application/json\" };\n           axios.post('http://' + HOST + '/api/v1/experiments', user, config)\n             .then(response => {\n         \t    this.setState({role: 'Admin',\n       \t\t\t    \t           activePage: 'adminlanding',\n                             password: response.data.password,\n                             experiments: response.data.experiments,\n                             userList: response.data.user_list,\n       \t\t\t            \t   isLoading: false});\n             })\n         }\n      else if(response.data.role === 'Teacher') {\n        this.setState({\n          role: 'Teacher',\n          password: response.data.password,\n        });\n        this.getTeacherReport();\n      }\n\t    else {\n\t  \t  this.getTests();\n      }\n\t\t}\n\t  else {\n        this.setState({\n\t\t\t// activePage: response.data.isValid ? 'activity': 'login',\n\t\t\tactivePage: 'login',\n\t\t\tmessage: response.data.message,\n            password: response.data.password,\n            isLoading: false});\n\t    }\n      })\n  }\n\n\n  getTeacherReport() {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getteacherreport', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       teacherReport: response.data.teacher_report,\n                       isLoading: false,\n                       activePage: 'teacherlanding'\n                       })\n      })\n  }\n  \n  update(selections) {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      testcode: this.state.tests[this.state.activeTestIndex]['test_code'],\n      selections: selections\n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/updateresponse', user, config)\n      .then(response => {\n        this.setState({message: response.data.message\n                       })\n      })\n  }\n\n  download = event => {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      exp_id: stateData.expId,\n      teacher_id: stateData.teacher\n    };\n    // this.setState({ isLoading: true })\n    // let config = { \"Content-Type\": \"application/zip\" };\n    let config = { \"Content-Type\": \"application/force-download\" };\n    axios.get('http://' + HOST + '/api/v1/export', user, config)\n      .then(response => {\n        this.setState({message: 'Done'})\n      })\n  }\n\n  report(selections, page) {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      selections: selections,\n      testcode: this.state.tests[this.state.activeTestIndex]['test_code'],\n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getresult', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       result: response.data.result,\n                       activePage: page\n            })\n      })\n  }\n\n  getLevels = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getlevels', user, config)\n      .then(response => {\n        this.setState({\n          levels: response.data.levels,\n          isLoading: false,\n          activePage: \"index\",\n        })\n      })\n  }\n\n  getTests = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/gettests', user, config)\n      .then(response => {\n        this.setState({\n          tests: response.data.tests,\n          isLoading: false,\n          activeTestIndex: response.data.index,\n          wordList: response.data.tests[response.data.index]['tokens'],\n          // activePage: \"activity\"\n          activePage: \"instructions\"\n        })\n      })\n  }\n\n  getWordList = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getwordlist', user, config)\n      .then(response => {\n        this.setState({\n          wordList: response.data.wordList,\n          activeWordIndex: 0,\n          selections: [],\n          isLoading: false,\n          activePage: \"activity\",\n          result: {}\n        })\n      })\n  }\n\n  componentWillMount() {\n    this.setState({activePage: 'signup'});\n    document.addEventListener(\"keyup\", this.handleKeyPress.bind(this));\n  }\n\n  handleKeyPress (e) {\n    if (e.which === 89) { \n       this.selection(\"yes\")\n    }\n    else if (e.which === 78) {\n       this.selection(\"no\")\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  selection (choice) {\n\tif (this.state.activeWordIndex + 1 <= this.state.wordList.length) {\n    var joined = this.state.selections.concat(choice);\n    var page = this.state.activePage\n    if(joined.length >= this.state.wordList.length && this.state.wordList.length > 0) {\n       // this.update(joined)\n       // page = \"minireport\"\n       page = \"score\"\n       // page = \"report\"\n       this.report(joined, page)\n    }\n\n    this.setState({\n        selection: choice,\n        activeWordIndex: this.state.activeWordIndex + 1,\n        selections: joined,\n        activePage: page\n    })\n   } \n  }\n\n  renderLogin() {\n        const { classes } = this.props;\n    return ( \n\t\t\t <Paper className=\"login_card\">\n\t\t\t   <div className=\"switch_container\">\n\t\t\t     <div className=\"login_switch\" style={{background: \"#47d836\"}} onClick={() => {this.setState({activePage: 'signup', message:\"\"})}}>\n\t\t\t     Signup \n\t\t\t     </div>\n\t\t\t   </div>\n\n\t\t\t   <h1>Login</h1>\n\t\t\t   <form  onSubmit={this.login} style={{marginTop:\"30px\"}}>\n\t\t\t\t\t  <div>\n    \t\t\t\t\t  <div className='authAlert' style={{color: 'blue'}}>{this.state.message}</div>\n\t\t\t\t\t  </div>\n                <div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"firstName\" label=\"First Name\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"middleName\" label=\"Middle Name\" type=\"text\" fullWidth onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"lastName\" label=\"Last Name\" type=\"text\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"password\" label=\"Password\" type=\"password\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '25px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Login</Button>\n                    </Grid>\n                </div>\n\t\t\t  </form>\n            </Paper>\n    );\n  }\n\n  renderSignup() {\n\treturn (\n\t\t\t <Paper className=\"login_card\">\n\t\t\t\t<div className=\"switch_container\">\n\t\t\t\t\t  <div className=\"login_switch\" onClick={() => {this.setState({activePage: 'login', message: \"\"})}}>\n\t\t\t\t\t  Login\n\t\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t   <h1>Signup</h1>\n\t\t\t   <form  onSubmit={this.signup} style={{marginTop:\"30px\"}}>\n\n\t\t\t\t\t  <div>\n    \t\t\t\t\t  <div className='authAlert' style={{color: 'red'}} >{this.state.message}</div>\n\t\t\t\t\t  </div>\n                <div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"firstName\" label=\"First Name\" type=\"text\" fullWidth autoFocus required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"middleName\" label=\"Middle Name\" type=\"text\" fullWidth onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"lastName\" label=\"Last Name\" type=\"text\" fullWidth required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n\t\t\t\t\t<Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n\t\t\t\t\t\t<FormControl fullWidth required>\t\n\t\t\t\t\t\t\t<InputLabel id=\"teachers\">Teacher</InputLabel>\n\t\t\t\t\t\t\t<Select labelId=\"teachers\" name=\"teacher\" value={this.state.teacher} onChange={this.handleChange}>\n\t\t\t\t\t\t\t  <MenuItem value=\"\"><em>None</em></MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbd9e414a94dc67fd995\">Bleicher</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e3454f8cc0b53337bc5fa13\">Meurers</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e34554acc0b53337bc5fa14\">Deeg</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbaae414a94dc67fd994\">Goedicke</MenuItem>\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher3\">Howind</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher4\">Lang</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher5\">Rehberger</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher6\">Spiegelhalter</MenuItem> */}\n\t\t\t\t\t\t\t</Select>\n                        </FormControl>\n\t\t\t\t\t\t </Grid>\n\t\t\t        </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"dob\" label=\"Date of Birth\" type=\"date\" fullWidth required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"email\" label=\"E-mail\" type=\"email\" fullWidth onChange={this.handleChange} />\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Sign up</Button>\n                    </Grid>\n                    <div className=\"card\">\n                      Password: ddmmyyyyabc\n                    <br />\n                      (ddmmyyyy) Date of birth and (abc) first three letters of the name\n                    <br />\n                      for example: <br /> Walter White, 15/10/2004 <br /> <b>15102004wal</b>\n                    </div>\n                </div>\n\t\t\t  </form>\n            </Paper>\n\t);\n  }\n\n  renderCheckoutbar() {\n    return (\n\t\t<div className=\"checkout-wrap\">\n      <div className=\"checkout-bar-empty\"></div>\n\t\t  <ul className=\"checkout-bar\">\n          \t{this.state.tests.map((value, index) => {\n            \treturn (\n\t\t\t\t  <li style={{width: (index !== this.state.activeTestIndex? 6 : 100 - (this.state.tests.length - 1) * 6).toString() + '%'}} className={index === this.state.activeTestIndex? 'active' : index < this.state.activeTestIndex? 'visited' : ''}> <div className=\"bar\" style={{ width: (this.state.activeWordIndex / this.state.wordList.length) * 96+ \"%\" }}></div> {value['test_code'][5]}&#9734;</li>\n            \t)\n          \t})}\n\t\t  </ul>\n\t\t</div>\n\n    );\n  }\n\n  renderHeader() {\n  \treturn (\n\t\t<div>\n\t\t\t<div className='header'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='AppName'>DoYouKnowIt!</div>\n\t\t\t\t\t<div className='username'>{this.state.firstName}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n\n renderDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t\t\t<div className=\"row\">\n\t\t\t<button className=\"dashboardCard\" onClick={this.getLevels}>English vocabulary test </button>\n\t\t\t<button className=\"dashboardCard\" style={{background: \"linear-gradient(45deg, rgb(98, 255, 0), rgba(0, 0, 0, 0.79))\"}}>Science MCQs</button>\n\t\t\t<button className=\"dashboardCard\" style={{background: \"linear-gradient(45deg, rgba(224, 106, 23, 0.92), rgba(6, 3, 222, 0.79))\"}}>Maths Assignment 01</button>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n renderAdminDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div style={{padding: \"2%\"}}>\n      <div className=\"tabs\">\n        <Tabs data={[\n          [\"Experiment\", \n          <div>\n           <div className=\"card\" style={{\"color\": \"dimgrey\"}}>\n             Choose the testsets within the following range.\n             101-120, \n             201-220, \n             301-320, \n             401-420, \n             501-520, \n             601-620 \n             <br />\n             <br />Example: <b>102;201;311;403;514</b>\n           </div>\n\t\t\t     <form onSubmit={this.defineExperiment}>\n                        <Grid container spacing={8} alignItems=\"flex-end\">\n                            <Grid item md={true} sm={true} xs={true}>\n                                <TextField name=\"experiment\" label=\"Test Sequence\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange}/>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n                            <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Save</Button>\n                        </Grid>\n\t\t\t     </form>\n           </div>]\n          ,\n          [\"Export\",\n          <div>\n      <div className='row'>\n\t\t\t  <form onSubmit={this.download}>\n\t\t\t\t\t<Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n\t\t\t\t\t\t<FormControl fullWidth required>\t\n\t\t\t\t\t\t\t<InputLabel id=\"teachers\">Teacher</InputLabel>\n\t\t\t\t\t\t\t<Select labelId=\"teachers\" name=\"teacher\" value={this.state.teacher} onChange={this.handleChange}>\n\t\t\t\t\t\t\t  <MenuItem value=\"\"><em>None</em></MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbd9e414a94dc67fd995\">Bleicher</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e3454f8cc0b53337bc5fa13\">Meurers</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e34554acc0b53337bc5fa14\">Deeg</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbaae414a94dc67fd994\">Goedicke</MenuItem>\n\t\t\t\t\t\t\t</Select>\n            </FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t   </Grid>\n\t\t\t\t\t<Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n\t\t\t\t\t\t<FormControl fullWidth required>\t\n\t\t\t\t\t\t\t<InputLabel id=\"experiment\">Experiment</InputLabel>\n\t\t\t\t\t\t\t<Select labelId=\"experiment\" name=\"expId\" value={this.state.expId} fullWidth onChange={this.handleChange}>\n\t\t\t\t\t\t\t  <MenuItem value=\"\"><em>None</em></MenuItem>\n          \t    {this.state.experiments.map((value, index) => {\n                  return (\n\t\t\t\t\t\t\t    <MenuItem value={value[0]}>{value[1]}</MenuItem>\n               \t)\n          \t    })}\n\t\t\t\t\t\t\t</Select>\n            </FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t   </Grid>\n          <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n              <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Download</Button>\n          </Grid>\n\t\t\t  </form>\n      </div>\n\t\t\t</div>\n    ],\n          [\"Users\",\n           <div> \n             {this.state.userList.map((value, index) => {\n                return(\n                  <div className={value[\"role\"] + \" userrow\"}>\n                    <div style={{\"width\": \"98%\", \"display\": \"flex\"}}>\n                    <div className='usercard' style={{\"width\": \"90%\"}}>{value[\"name\"]}</div>\n                    <div className='usercard'>{value[\"role\"]}</div>\n                    </div>\n                    <div className=\"removeuser\" onClick={() => {this.removeuser(value[\"id\"])}} style={{\"width\": \"1%\"}}> x </div>\n                  </div>\n                );\n             })}\n           </div>],\n        ]}/>\n        \n        </div>\n        </div>\n        </div>\n\t);\n  }\n\n renderTeacherDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t\t\t<div className=\"row\">\n          {this.state.teacherReport.map((value, index) => {\n            return (\n              <div className=\"card level_card\"  onClick={() => {this.setState({tests: value['tests'], studentResults:value['results'], expName:value[\"definition\"], activePage: 'teacherlanding1'})}}>\n                {value[\"definition\"]}\n              </div>\n            )\n          })}\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\nrenderScoreCell(result) {\n  function percentageToColor(percentage) {\n  const colors = [\n                   \"#c50000a8\",\n                   \"#c42a00a8\",\n                   \"#c35400a8\",\n                   \"#c27d00a8\",\n                   \"#c1a600a8\",\n                   \"#b2c000a8\",\n                   \"#88bf00a8\",\n                   \"#5fbe00a8\",\n                   \"#36bd00a8\",\n                   \"#0dbc00a8\",\n                   \"#00bb1ba8\",\n                   \"#00bb1ba8\"]\n    return colors[Math.floor(percentage/10)];\n  }\n  return (\n    <div className=\"col-lg-9 row\">\n      {result.map((value, index) => {\n        return(\n          <div className=\"scoreCell card\" style={{width: (100 / result.length).toString() + \"%\", background:percentageToColor(value[\"metrics\"][\"score\"])}}  onClick={() => {this.setState({wordList: this.state.tests[index]['tokens'], metrics:value['metrics'], selections:value['evaluated_responses'], activePage: 'report'})}}>\n            {value[\"metrics\"][\"score\"]}\n          </div>\n        )\n      })\n      }\n    </div>\n  );\n}\n\nrenderResultTableEntry() {\n  return (\n\t  <div>\n        {this.state.studentResults.map((value, index) => {\n          return (\n            <div className=\"row\">\n              <div className=\"scoreRow col-lg-3 card\">\n                 {value[\"name\"]}\n              </div>\n              {this.renderScoreCell(value[\"result\"])}\n            </div>\n          )\n        })}\n\t  </div>\n  )\n}\n\nrenderResultTableHeader() {\n  return (\n\t  <div>\n      <div className=\"row\">\n        <div className=\"scoreRow col-lg-3 card\">\n           Name\n        </div>\n        <div className=\"col-lg-9 row\">\n         {this.state.studentResults[0][\"result\"].map((value, index) => {\n           return(\n              <div className=\"scoreCell card\" style={{width: (100 / this.state.studentResults[0][\"result\"].length).toString() + \"%\"}}>\n               {value['test_code'][5]}&#9734;\n             </div>\n           )\n         })\n         }\n        </div>\n      </div>\n\t  </div>\n  )\n\n}\n\nrenderTeacherDashboard1() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        {this.renderResultTableHeader()}\n        {this.renderResultTableEntry()}\n\t      <div className='row'>\n\t        <button className='button back' onClick={() => {this.setState({activePage: 'teacherlanding'})}}> &#8617; </button>\n\t      </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n  renderActivity() {\n    return (\n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n    {this.renderCheckoutbar()}\n\t\t<div className=\"content\">\n        <h1 className=\"word\"> {this.state.wordList[this.state.activeWordIndex]} </h1>\n        <div className=\"col-md-12\">\n          <div className=\"row card_ctr\">\n            <button className=\"button option green\" onClick={() => {this.selection(\"yes\")}}> known (y) </button>\n            <button className=\"button option grey\" onClick={() => {this.selection(\"no\")}}> unknown (n) </button>\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderIndex() {\n    return(\n      \t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t<div className=\"content\">\n\t\t<h1 style={{ marginBottom: 30 }}> Levels </h1>\n        <div className=\"row\">\n          {this.state.levels.map((value, index) => {\n            return (\n              <div className=\"column\" key={index}>\n                <div className=\"card level_card\" style={{borderRadius: 10}} onClick={() => {this.setState({testsets: value['testsets'], activePage: 'level'})}}>\n                  {value['level']}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\t  </div>\n\t </div>\n    );\n  }\n\n  renderLevel() {\n    return(\n      \t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n      <div className=\"content\">\n\t\t<h1 style={{ marginBottom: 30 }}> Testsets </h1>\n        <div className=\"row\">\n          {this.state.testsets.map((value, index) => {\n            return (\n              <div className=\"column\" key={index}>\n                <div className=\"card testset_card\" style={{borderRadius: 10}} onClick={() => {this.setState({wordList: value['tokens'], activePage: 'activity'})}}> {value['test_code']}\n                </div>\n              </div>\n            )\n          })}\n      </div>\n\t  <br />\n\t  <br />\n\t  <br />\n\t  <br />\n\t  <div className='row'>\n\t  <button className='button back' onClick={() => {this.setState({activePage: 'index'})}}> &#8617; </button>\n\t  </div>\n\t</div>\n\t</div>\n    );\n  }\n\n  nextTest() {\n    var testIndex = this.state.activeTestIndex + 1;\n    if(testIndex < this.state.tests.length) {\n      this.setState({\n        activeTestIndex: testIndex,\n        wordList: this.state.tests[testIndex]['tokens'],\n        activeWordIndex: 0,\n        selection: \"\",\n        selections: [],\n        levels: [],\n        result: {},\n        activePage: 'activity'})\n    }\n    else {\n      this.setState({\n        activeTestIndex: 0,\n        activeWordIndex: 0,\n        selection: \"\",\n        selections: [],\n        levels: [],\n        result: {},\n        activePage: 'thankyou'})\n    }\n  }\n\n  renderInstructions() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        <div className=\"instruct\"> <b> Read through the list of words carefully. For each word: </b> <br /> <br />\n                                   if you know what it means, click 'y' key or <button className=\"button option green\"> known (y) </button> (for YES)  <br /> <br />\n                                   if you don't know what it means, or if you aren't sure, click 'n' or click <button className=\"button option grey\"> unknown (n) </button> key (for NO).</div>\n\t      <div>\n           <br />\n           <button style={{borderRadius: 10}} style={{borderRadius: 10, margin:\"40px auto\"}} onClick={() => {this.setState({activePage: 'activity'})}} > Continue </button>\n        </div>\n\t\t\t</div>\n      \n\t\t</div>\n\t);\n  }\n\n  renderThankyou() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        <div className=\"thankyou\">Thank You !!!</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n  renderReport() {\n    return (\n      <div>\n\t  \t<br />\n\t  \t<br />\n        <h1> Report </h1>\n\t\t<div className=\"row\">\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>Hits</h4><br />\n\t\t\t    <h2>{this.state.metrics[\"hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>False Hits</h4><br />\n\t\t\t    <h2>{this.state.metrics[\"false_hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>Score</h4><br />\n\t\t\t    <h2>{this.state.metrics[\"score\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n        <div className=\"row\">\n        {this.state.wordList.map((value, index) => {\n          return (\n            <div className=\"column col-md-3 col-sm-4\" key={index}>\n\t\t\t  {this.renderReportCard(index, value)}\n            </div>\n          )\n        })}\n      </div>\n\t    <div className='row'>\n\t      <button className='button back' onClick={() => {this.setState({activePage: 'teacherlanding1'})}}> &#8617; </button>\n\t    </div>\n\t  <br />\n\t  <br />\n      </div>\n    );\n  }\n\n  renderMiniReport() {\n    return ( \n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n    {this.renderCheckoutbar()}\n\t  \t<br />\n\t  \t<br />\n\t\t<div className=\"row\">\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>Hits</h4><br />\n\t\t\t    <h2>{this.state.result[\"hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>False Hits</h4><br />\n\t\t\t    <h2>{this.state.result[\"false_hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n        <div className=\"row\">\n           <button style={{borderRadius: 10}} onClick={() => {this.nextTest()}} > Next {this.state.activeTestIndex + 1} </button>\n        </div>\n      </div>\n    );\n  }\n\n  renderScore() {\n    return ( \n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n    {this.renderCheckoutbar()}\n\t  \t<br />\n\t  \t<br />\n        <div className=\"scoreboard\">\n\t\t\t<div className=\"row\">\t\n\t\t\t\t<div className=\"scorecard\">{this.state.result[\"score\"]}%</div>\n      </div>\n      <div>\n\t\t\t\t<div className=\"scoreFeedback\">{this.state.result[\"message\"]}</div>\n\t\t\t</div> \n            <div className=\"row\">\n               <button className=\"button\" style={{borderRadius: 10, margin:\"40px auto\"}} onClick={() => {this.nextTest()}} > Next </button>\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderReportCard (index, value) {\n    var selection = this.state.selections[index];\n\tvar bgColor;\n\tvar textColor = \"black\";\n\tif (selection === \"yes\") {\n\t\tbgColor = \"#01a22b88\";\n\t} else if (selection === \"wrong\") {\n\t\tbgColor = \"#c51a0988\";\n  } else if(selection === \"unknown\")\n   {\n\t\tbgColor = \"#004cc5bb\";\n\t\ttextColor = \"white\";\n  } else {\n\t\tbgColor = \"grey\";\n\t\ttextColor = \"white\";\n\t}\n\treturn (\n    \t<div className=\"card report_card\" style={{color: textColor, background: bgColor}}>\n    \t  <h4 style={{textAlign: \"center\", display: \"table-cell\"}}>{value}</h4>\n    \t</div>\n\t );\n  }\n\n  render() {\n    return (\n        <div className= \"container\">\n        {this.pages[this.state.activePage]()}\n        {this.state.isLoading ?\n          <div className=\"overlay\">\n            <div className=\"lds-roller\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div> : null\n        }\n        </div>\n    ); \n  }\n\n}\n\nexport default App;\n\nclass Tabs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 0\n    }\n  }\n  \n  clickHandler = (e) => {\n    this.setState({\n      active: parseInt(e.currentTarget.attributes.num.value)\n    })\n  }\n  \n  render() {\n    let content = \"\";\n    const tabs = this.props.data.map(([label, text], i) => {\n      content = this.state.active === i ? text : content;  \n      return <li \n               className={this.state.active === i ? \"tab active\" : \"tab\" } \n               key={label} \n               num={i}\n               onClick={this.clickHandler}>\n        {label}\n      </li>;\n    });\n    \n    return ( \n      <section className=\"tabs\">\n        <menu>\n          <ul>\n            {tabs}\n          </ul>\n        </menu>\n        <div>\n          {content}\n        </div>\n      </section>);\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}