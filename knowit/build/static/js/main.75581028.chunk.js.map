{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","HOST","App","props","signup","event","preventDefault","stateData","state","user","firstname","firstName","lastname","lastName","middlename","middleName","role","teacher","email","dob","setState","isLoading","axios","post","then","response","activePage","data","isValid","message","addTeacher","tfirstName","tlastName","password","tpassword","userList","user_list","defineExperiment","experiment","experimentDef","expName","experiments","login","getExperiments","getTeacherReport","getTests","download","exp_id","expId","teacher_id","get","getLevels","username","levels","tests","activeTestIndex","index","wordList","getWordList","activeWordIndex","selections","result","handleChange","evt","target","name","value","testsets","selection","studentResults","teacherReport","aStudentResult","metrics","pages","renderLogin","bind","renderSignup","renderInstructions","renderAdminDashboard","renderTeacherDashboard1","renderActivity","renderIndex","renderLevel","renderReport","renderMiniReport","renderScore","renderThankyou","uid","this","roles","query","testCodes","report","test_codes","detailedReport","ARI","active_id","activeExp","studentReport","teacher_report","active_exp","testcode","page","getUserList","document","addEventListener","handleKeyPress","e","which","choice","length","joined","concat","classes","Paper","className","style","background","onClick","onSubmit","marginTop","color","Grid","container","spacing","alignItems","item","md","sm","xs","TextField","label","type","fullWidth","autoFocus","required","onChange","display","justify","Button","variant","textTransform","FormControl","InputLabel","id","Select","labelId","MenuItem","map","inputProps","min","max","step","width","toString","renderHeader","padding","title","selectExperiment","removeuser","percentage","Math","floor","renderScoreCell","renderResultTableHeader","renderResultTableEntry","renderCheckoutbar","marginBottom","key","borderRadius","testIndex","margin","marginLeft","justifyContent","activeReport","renderReportCard","nextTest","bgColor","textColor","textAlign","Component","Tabs","clickHandler","active","parseInt","currentTarget","attributes","num","content","tabs","i","text","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,kC,oRCiBvCC,EAAO,iBAwqCIC,E,YArqCV,WAAYC,GAAQ,IAAD,8BAChB,4CAAMA,KAiEZC,OAAS,SAAAC,GACPA,EAAMC,iBACN,IAAIC,EAAY,EAAKC,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBC,QAASV,EAAUU,QACnBC,MAAOX,EAAUW,MACjBC,IAAKZ,EAAUY,KAEjB,EAAKC,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,iBAAkBQ,EADnC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACM,WAAYD,EAASE,KAAKC,QAAU,QAAU,SAC7DC,QAASJ,EAASE,KAAKE,QACRR,WAAW,QApFV,EAwFtBS,WAAa,SAAAzB,GACXA,EAAMC,iBACN,IAAIC,EAAY,EAAKC,MACfC,EAAO,CACXC,UAAWH,EAAUwB,WACrBnB,SAAUL,EAAUyB,UAIpBC,SAAU1B,EAAU2B,WAEtB,EAAKd,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,qBAAsBQ,EADvC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvBM,SAAUV,EAASE,KAAKS,UACxBf,WAAW,QAzGV,EAyJtBgB,iBAAmB,SAAAhC,GACjBA,EAAMC,iBACN,IAAIC,EAAY,EAAKC,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBiB,SAAU1B,EAAU0B,SACpBK,WAAY/B,EAAUgC,cACtBC,QAAUjC,EAAUiC,SAEtB,EAAKpB,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,oBAAqBQ,EADtC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvBY,YAAahB,EAASE,KAAKc,YAC3BD,QAAS,GACTD,cAAe,GACflB,WAAW,QA7KV,EA+NtBqB,MAAQ,SAAArC,GACNA,EAAMC,iBACN,IAAIC,EAAY,EAAKC,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBkB,SAAU1B,EAAU0B,UAEtB,EAAKb,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,gBAAiBQ,EADlC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACT,GAAIA,EAASE,KAAKC,QACjB,GAA2B,UAAvBH,EAASE,KAAKX,KAAkB,CAG7B,EAAK2B,qBAEqB,YAAvBlB,EAASE,KAAKX,MACpB,EAAKI,SAAS,CACZJ,KAAM,UACNiB,SAAUR,EAASE,KAAKM,WAE1B,EAAKW,oBAGP,EAAKC,gBAIH,EAAKzB,SAAS,CAEnBM,WAAY,QACZG,QAASJ,EAASE,KAAKE,QACdI,SAAUR,EAASE,KAAKM,SACxBZ,WAAW,QAnQC,EAyUtByB,SAAW,SAAAzC,GACT,IAAIE,EAAY,EAAKC,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBE,MAAOX,EAAUW,MACjBe,SAAU1B,EAAU0B,SACpBc,OAAQxC,EAAUyC,MAClBC,WAAY1C,EAAUU,SAKxBK,IAAM4B,IAAI,UAAYjD,EAAO,iBAAkBQ,EADlC,CAAE,eAAgB,+BAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAAS,aA1VR,EAqXtBsB,UAAY,SAAC9C,GACX,IAAIE,EAAY,EAAKC,MACrB,EAAKY,SAAS,CAAEC,WAAW,IAC3B,IAAMZ,EAAO,CACX2C,SAAU7C,EAAUE,MAGtBa,IAAMC,KAAK,UAAYtB,EAAO,oBAAqBQ,EADtC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CACZiC,OAAQ5B,EAASE,KAAK0B,OACtBhC,WAAW,EACXK,WAAY,cAjYE,EAsYtBmB,SAAW,SAACxC,GACV,IAAIE,EAAY,EAAKC,MACrB,EAAKY,SAAS,CAAEC,WAAW,IAC3B,IAAMZ,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBE,MAAOX,EAAUW,MACjBe,SAAU1B,EAAU0B,SACpBmB,SAAU7C,EAAUE,MAGtBa,IAAMC,KAAK,UAAYtB,EAAO,mBAAoBQ,EADrC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CACZkC,MAAO7B,EAASE,KAAK2B,MACrBjC,WAAW,EACXkC,gBAAiB9B,EAASE,KAAK6B,MAC/BC,SAAUhC,EAASE,KAAK2B,MAAM7B,EAASE,KAAK6B,OAAlC,OAEV9B,WAAY,qBA3ZE,EAgatBgC,YAAc,SAACrD,GACb,IAAIE,EAAY,EAAKC,MACrB,EAAKY,SAAS,CAAEC,WAAW,IAC3B,IAAMZ,EAAO,CACX2C,SAAU7C,EAAUE,MAGtBa,IAAMC,KAAK,UAAYtB,EAAO,sBAAuBQ,EADxC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CACZqC,SAAUhC,EAASE,KAAK8B,SACxBE,gBAAiB,EACjBC,WAAY,GACZvC,WAAW,EACXK,WAAY,WACZmC,OAAQ,SA/aM,EAmctBC,aAAe,SAAAC,GACb,EAAK3C,SAAL,eAAiB2C,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,SAlc1C,EAAK1D,MAAQ,CACTC,KAAM,KAGN6C,MAAO,GACPa,SAAU,GACVZ,gBAAiB,GAGjBE,SAAU,GACVE,gBAAiB,EACjBS,UAAW,GACXR,WAAY,GACZP,OAAQ,GACRQ,OAAQ,GAGRvB,WAAY,GAGZ+B,eAAgB,GAChBC,cAAe,GACf9B,QAAS,GACT+B,eAAgB,GAChBC,QAAS,GAGTnD,WAAW,EAEXK,WAAY,SAGZf,UAAW,GACXE,SAAU,GACVE,WAAY,GACfC,KAAM,UACHC,QAAS,GACTC,MAAO,GACPe,SAAU,GACVd,IAAK,GACLU,QAAS,GAGTM,SAAU,IAGhB,EAAKsC,MAAQ,CACV,MAAS,EAAKC,YAAYC,KAAjB,gBACT,OAAU,EAAKC,aAAaD,KAAlB,gBAEV,aAAgB,EAAKE,mBAAmBF,KAAxB,gBAChB,aAAgB,EAAKG,qBAAqBH,KAA1B,gBAEhB,gBAAmB,EAAKI,wBAAwBJ,KAA7B,gBACnB,SAAY,EAAKK,eAAeL,KAApB,gBACZ,MAAS,EAAKM,YAAYN,KAAjB,gBACT,MAAS,EAAKO,YAAYP,KAAjB,gBACT,OAAU,EAAKQ,aAAaR,KAAlB,gBACV,WAAc,EAAKS,iBAAiBT,KAAtB,gBACd,MAAS,EAAKU,YAAYV,KAAjB,gBACT,SAAY,EAAKW,eAAeX,KAApB,iBA9DG,E,wEA6GXY,GAAM,IAAD,OACR9E,EAAO,CACX8E,IAAKA,GAEPC,KAAKpE,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,qBAAsBQ,EADvC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvBM,SAAUV,EAASE,KAAKS,UACxBf,WAAW,S,kCAIpBoE,GAAQ,IAAD,OACXhF,EAAO,CACXiF,MAAOD,GAITnE,IAAMC,KAAK,UAAYtB,EAAO,sBAAuBQ,EADxC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvBM,SAAUV,EAASE,KAAKS,UACxBf,WAAW,S,4CAIVsE,EAAWC,GAAS,IAAD,OACjCnF,EAAO,CACXoF,WAAYF,GAIdrE,IAAMC,KAAK,UAAYtB,EAAO,gCAAiCQ,EADlD,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvByB,MAAO7B,EAASE,KAAK2B,MACrBwC,eAAgBF,EAChBG,IAAK,EACL1E,WAAW,S,uCA4BdkE,GAAM,IAAD,OACjBhF,EAAYiF,KAAKhF,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBiB,SAAU1B,EAAU0B,SACpB+D,UAAYT,GAEdC,KAAKpE,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,oBAAqBQ,EADtC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvBoE,UAAWV,EACZlE,WAAW,S,sCAKb,IAAD,OACXd,EAAYiF,KAAKhF,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBiB,SAAU1B,EAAU0B,UAEtBuD,KAAKpE,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,wBAAyBQ,EAD1C,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvBqE,cAAezE,EAASE,KAAKkC,OAC7BN,gBAAiB,EACjBI,gBAAiB,EACjBS,UAAW,GACXR,WAAY,GACZP,OAAQ,GACRhC,WAAW,EACXK,WAAW,kB,yCA6CZ,IAAD,OACbnB,EAAYiF,KAAKhF,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBiB,SAAU1B,EAAU0B,UAEtBuD,KAAKpE,SAAS,CAAEC,WAAW,IAG3BC,IAAMC,KAAK,UAAYtB,EAAO,6BAA8BQ,EAF/C,CAAE,eAAgB,qBAG5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvByC,cAAe7C,EAASE,KAAKwE,eAC7B9E,WAAW,EACXK,WAAY,yB,uCAKf,IAAD,OACXnB,EAAYiF,KAAKhF,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBkB,SAAU1B,EAAU0B,UAEtBuD,KAAKpE,SAAS,CAAEC,WAAW,IAE3BC,IAAMC,KAAK,UAAYtB,EAAO,sBAAuBQ,EADxC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACL,EAAKL,SAAS,CAACJ,KAAM,QACTU,WAAY,eACTO,SAAUR,EAASE,KAAKM,SACxBQ,YAAahB,EAASE,KAAKc,YAC3BN,SAAUV,EAASE,KAAKS,UACxB6D,UAAWxE,EAASE,KAAKyE,WAC5B/E,WAAW,S,6BAIrBuC,GAAa,IAAD,OACbrD,EAAYiF,KAAKhF,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBE,MAAOX,EAAUW,MACjBe,SAAU1B,EAAU0B,SACpBoE,SAAUb,KAAKhF,MAAM8C,MAAMkC,KAAKhF,MAAM+C,iBAA5B,UACVK,WAAYA,GAIdtC,IAAMC,KAAK,UAAYtB,EAAO,yBAA0BQ,EAD3C,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,e,6BA0BrC+B,EAAY0C,GAAO,IAAD,OACnB/F,EAAYiF,KAAKhF,MACfC,EAAO,CACXC,UAAWH,EAAUI,UACrBC,SAAUL,EAAUM,SACpBC,WAAYP,EAAUQ,WACtBC,KAAMT,EAAUS,KAChBE,MAAOX,EAAUW,MACjBe,SAAU1B,EAAU0B,SACpB2B,WAAYA,EACZyC,SAAUb,KAAKhF,MAAM8C,MAAMkC,KAAKhF,MAAM+C,iBAA5B,WAIZjC,IAAMC,KAAK,UAAYtB,EAAO,oBAAqBQ,EADtC,CAAE,eAAgB,qBAE5Be,MAAK,SAAAC,GACJ,EAAKL,SAAS,CAACS,QAASJ,EAASE,KAAKE,QACvBgC,OAAQpC,EAASE,KAAKkC,OACtBnC,WAAY4E,S,2CAqE/Bd,KAAKe,YAAY,CAAC,YAClBf,KAAKpE,SAAS,CAACM,WAAY,WAC3B8E,SAASC,iBAAiB,QAASjB,KAAKkB,eAAe/B,KAAKa,S,qCAG9CmB,GACE,KAAZA,EAAEC,MACHpB,KAAKpB,UAAU,OAEG,KAAZuC,EAAEC,OACRpB,KAAKpB,UAAU,Q,gCAQTyC,GACZ,GAAIrB,KAAKhF,MAAMmD,gBAAkB,GAAK6B,KAAKhF,MAAMiD,SAASqD,OAAQ,CAC/D,IAAIC,EAASvB,KAAKhF,MAAMoD,WAAWoD,OAAOH,GACtCP,EAAOd,KAAKhF,MAAMkB,WACnBqF,EAAOD,QAAUtB,KAAKhF,MAAMiD,SAASqD,QAAUtB,KAAKhF,MAAMiD,SAASqD,OAAS,IAG5ER,EAAO,QAEPd,KAAKI,OAAOmB,EAAQT,IAGvBd,KAAKpE,SAAS,CACVgD,UAAWyC,EACXlD,gBAAiB6B,KAAKhF,MAAMmD,gBAAkB,EAC9CC,WAAYmD,EACZrF,WAAY4E,O,oCAKH,IAAD,OACYd,KAAKrF,MAAjB8G,QACZ,OACA,kBAACC,EAAA,EAAD,CAAOC,UAAU,cACf,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eAAeC,MAAO,CAACC,WAAY,WAAYC,QAAS,WAAO,EAAKlG,SAAS,CAACM,WAAY,SAAUG,QAAQ,OAA3H,WAKF,qCACA,0BAAO0F,SAAU/B,KAAK9C,MAAO0E,MAAO,CAACI,UAAU,SAC9C,6BACI,yBAAKL,UAAU,YAAYC,MAAO,CAACK,MAAO,SAAUjC,KAAKhF,MAAMqB,UAE1D,6BACI,kBAAC6F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,YAAYkE,MAAM,aAAaC,KAAK,OAAOC,WAAS,EAACC,WAAS,EAACC,UAAQ,EAAEC,SAAUhD,KAAK1B,iBAGhH,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,WAAWT,MAAO,CAACqB,QAAS,SAC/D,kBAACf,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,aAAakE,MAAM,cAAcC,KAAK,OAAOC,WAAS,EAACG,SAAUhD,KAAK1B,iBAG9F,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,WAAWkE,MAAM,YAAYC,KAAK,OAAOC,WAAS,EAACE,UAAQ,EAAEC,SAAUhD,KAAK1B,iBAGpG,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,WAAWkE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACE,UAAQ,EAAEC,SAAUhD,KAAK1B,iBAGvG,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,SAAStB,MAAO,CAAEI,UAAW,SACjD,kBAACmB,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,WAAWnB,MAAM,UAAUL,MAAO,CAAEyB,cAAe,SAAjF,e,qCAQN,IAAD,OAChB,OACG,kBAAC3B,EAAA,EAAD,CAAOC,UAAU,cACjB,yBAAKA,UAAU,oBACZ,yBAAKA,UAAU,eAAeG,QAAS,WAAO,EAAKlG,SAAS,CAACM,WAAY,QAASG,QAAS,OAA3F,UAID,sCACA,0BAAO0F,SAAU/B,KAAKpF,OAAQgH,MAAO,CAACI,UAAU,SAE/C,6BACI,yBAAKL,UAAU,YAAYC,MAAO,CAACK,MAAO,QAAUjC,KAAKhF,MAAMqB,UAE1D,6BACI,kBAAC6F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,YAAYkE,MAAM,aAAaC,KAAK,OAAOC,WAAS,EAACC,WAAS,EAACC,UAAQ,EAACC,SAAUhD,KAAK1B,iBAG/G,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,WAAWT,MAAO,CAACqB,QAAS,SAC/D,kBAACf,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,aAAakE,MAAM,cAAcC,KAAK,OAAOC,WAAS,EAACG,SAAUhD,KAAK1B,iBAG9F,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,WAAWkE,MAAM,YAAYC,KAAK,OAAOC,WAAS,EAACE,UAAQ,EAACC,SAAUhD,KAAK1B,iBAGlH,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACpB,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GACrD,kBAACa,EAAA,EAAD,CAAaT,WAAS,EAACE,UAAQ,GAC9B,kBAACQ,EAAA,EAAD,CAAYC,GAAG,YAAf,WACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWjF,KAAK,UAAUC,MAAOsB,KAAKhF,MAAMS,QAASuH,SAAUhD,KAAK1B,cAC3E,kBAACqF,EAAA,EAAD,CAAUjF,MAAM,IAAG,qCAClBsB,KAAKhF,MAAM2B,SAASiH,KAAI,SAAClF,EAAOV,GAC/B,OACE,kBAAC2F,EAAA,EAAD,CAAUjF,MAAOA,EAAK,IAASA,EAAK,iBAepC,6BACA,yBAAKiD,UAAU,QAAf,oCAEA,6BAFA,uBAIA,6BAJA,oBAMA,6BANA,mBAQA,6BACA,6BATA,wBAUuB,oCAEvB,kBAACO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,MAAMkE,MAAM,sBAAsBC,KAAK,SAASiB,WAAY,CAAEC,IAAK,IAAKC,IAAK,KAAMC,KAAM,KAAOnB,WAAS,EAACG,SAAUhD,KAAK1B,iBAGjJ,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,WAAWT,MAAO,CAACqB,QAAS,SAC/D,kBAACf,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,QAAQkE,MAAM,SAASC,KAAK,QAAQC,WAAS,EAACG,SAAUhD,KAAK1B,iBAGrF,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,SAAStB,MAAO,CAAEI,UAAW,SACjD,kBAACmB,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,WAAWnB,MAAM,UAAUL,MAAO,CAAEyB,cAAe,SAAjF,iB,0CAQD,IAAD,OAClB,OACF,yBAAK1B,UAAU,iBACX,yBAAKA,UAAU,uBACjB,wBAAIA,UAAU,gBACN3B,KAAKhF,MAAM8C,MAAM8F,KAAI,SAAClF,EAAOV,GAC5B,OACP,wBAAI4D,MAAO,CAACqC,OAAQjG,IAAU,EAAKhD,MAAM+C,gBAAiB,EAAI,IAAsC,GAA/B,EAAK/C,MAAM8C,MAAMwD,OAAS,IAAQ4C,WAAa,KAAMvC,UAAW3D,IAAU,EAAKhD,MAAM+C,gBAAiB,SAAWC,EAAQ,EAAKhD,MAAM+C,gBAAiB,UAAY,IAAtO,IAA2O,yBAAK4D,UAAU,MAAMC,MAAO,CAAEqC,MAAQ,EAAKjJ,MAAMmD,gBAAkB,EAAKnD,MAAMiD,SAASqD,OAAU,GAAI,OAAhV,IAA+V5C,EAAK,UAAc,GAAlX,iB,qCASY,IAAD,OACd,OACD,6BACC,yBAAKiD,UAAU,UACd,6BACC,yBAAKA,UAAU,WAAf,gBACA,yBAAKA,UAAU,WAAWG,QAAS,WAAO,EAAKlG,SAAS,CAACM,WAAY,YAAa8D,KAAKhF,MAAMG,gB,wCAQ/F,OACD,yBAAKwG,UAAU,UACb3B,KAAKmE,eACN,yBAAKxC,UAAU,WACf,yBAAKA,UAAU,OACf,4BAAQA,UAAU,gBAAgBG,QAAS9B,KAAKrC,WAAhD,4BACA,4BAAQgE,UAAU,gBAAgBC,MAAO,CAACC,WAAY,iEAAtD,gBACA,4BAAQF,UAAU,gBAAgBC,MAAO,CAACC,WAAY,4EAAtD,4B,6CAOsB,IAAD,OACrB,OACD,yBAAKF,UAAU,UACb3B,KAAKmE,eACN,yBAAKvC,MAAO,CAACwC,QAAS,OACnB,yBAAKzC,UAAU,QACb,kBAAC,EAAD,CAAMxF,KAAM,CACV,CAAC,aACD,6BACE,yBAAKwF,UAAU,iBACZ3B,KAAKhF,MAAMiC,YAAY2G,KAAI,SAAClF,EAAOV,GAClC,OAEE,4BAAQ2D,UAAW,EAAK3G,MAAMyF,YAAc/B,EAAM,GAAI,oBAAsB,aAAc2F,MAAO3F,EAAM,GAAIoD,QAAS,WAAO,EAAKwC,iBAAiB5F,EAAM,MAAvJ,IAA+JA,EAAM,GAArK,SAOP,yBAAKiD,UAAU,OAAOC,MAAO,CAAC,MAAS,UAAW,KAAQ,QAAS,MAAS,OAAQ,eAAgB,UAAW,eAAgB,YAA/H,uGAQE,6BACA,6BATF,YASiB,mDAEpB,0BAAMG,SAAU/B,KAAKnD,kBACL,kBAACqF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,UAAUkE,MAAM,gBAAgBC,KAAK,OAAOC,WAAS,EAACC,WAAS,EAACC,UAAQ,EAAEC,SAAUhD,KAAK1B,eACzG,kBAACoE,EAAA,EAAD,CAAWjE,KAAK,gBAAgBkE,MAAM,gBAAgBC,KAAK,OAAOC,WAAS,EAACE,UAAQ,EAAEC,SAAUhD,KAAK1B,iBAG7G,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,SAAStB,MAAO,CAAEI,UAAW,SACjD,kBAACmB,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,WAAWnB,MAAM,UAAUL,MAAO,CAAEyB,cAAe,SAAjF,YAKlB,CAAC,SACD,6BACJ,yBAAK1B,UAAU,OAChB,0BAAMI,SAAU/B,KAAK1C,UACrB,kBAAC4E,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACpB,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GACrD,kBAACa,EAAA,EAAD,CAAaT,WAAS,EAACE,UAAQ,GAC9B,kBAACQ,EAAA,EAAD,CAAYC,GAAG,YAAf,WACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWjF,KAAK,UAAUC,MAAOsB,KAAKhF,MAAMS,QAASuH,SAAUhD,KAAK1B,cAClF,kBAACqF,EAAA,EAAD,CAAUjF,MAAM,IAAG,qCACnB,kBAACiF,EAAA,EAAD,CAAUjF,MAAM,4BAAhB,YACA,kBAACiF,EAAA,EAAD,CAAUjF,MAAM,4BAAhB,WACA,kBAACiF,EAAA,EAAD,CAAUjF,MAAM,4BAAhB,QACA,kBAACiF,EAAA,EAAD,CAAUjF,MAAM,4BAAhB,gBAKJ,kBAACwD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACpB,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GACrD,kBAACa,EAAA,EAAD,CAAaT,WAAS,EAACE,UAAQ,GAC9B,kBAACQ,EAAA,EAAD,CAAYC,GAAG,cAAf,cACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,aAAajF,KAAK,QAAQC,MAAOsB,KAAKhF,MAAMwC,MAAOqF,WAAS,EAACG,SAAUhD,KAAK1B,cAC1F,kBAACqF,EAAA,EAAD,CAAUjF,MAAM,IAAG,qCACZsB,KAAKhF,MAAMiC,YAAY2G,KAAI,SAAClF,EAAOV,GACjC,OACP,kBAAC2F,EAAA,EAAD,CAAUjF,MAAOA,EAAM,IAAKA,EAAM,WAOnC,kBAACwD,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,SAAStB,MAAO,CAAEI,UAAW,SACjD,kBAACmB,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,WAAWnB,MAAM,UAAUL,MAAO,CAAEyB,cAAe,SAAjF,iBAMJ,CAAC,QACA,6BACGrD,KAAKhF,MAAM2B,SAASiH,KAAI,SAAClF,EAAOV,GAC9B,OACE,yBAAK2D,UAAWjD,EAAK,KAAW,YAC9B,yBAAKkD,MAAO,CAAC,MAAS,MAAO,QAAW,SACtC,yBAAKD,UAAU,WAAWC,MAAO,CAAC,MAAS,QAASlD,EAAK,MACzD,yBAAKiD,UAAU,YAAYjD,EAAK,OAElC,yBAAKiD,UAAU,aAAaG,QAAS,WAAO,EAAKyC,WAAW7F,EAAK,KAAUkD,MAAO,CAAC,MAAS,OAA5F,WAIN,yCACH,0BAAOG,SAAU/B,KAAK1D,WAAYsF,MAAO,CAACI,UAAU,SAC/C,6BACI,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,aAAakE,MAAM,aAAaC,KAAK,OAAOC,WAAS,EAACC,WAAS,EAACC,UAAQ,EAAEC,SAAUhD,KAAK1B,iBAGjH,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,YAAYkE,MAAM,YAAYC,KAAK,OAAOC,WAAS,EAACE,UAAQ,EAAEC,SAAUhD,KAAK1B,iBAGrG,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,YACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAMC,IAAI,EAAMC,IAAI,GAC/B,kBAACC,EAAA,EAAD,CAAWjE,KAAK,YAAYkE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACE,UAAQ,EAAEC,SAAUhD,KAAK1B,iBAGxG,kBAAC4D,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,SAAStB,MAAO,CAAEI,UAAW,SACjD,kBAACmB,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,WAAWnB,MAAM,UAAUL,MAAO,CAAEyB,cAAe,SAAjF,sB,+CAaG,IAAD,OACvB,OACD,yBAAK1B,UAAU,UACb3B,KAAKmE,eACN,yBAAKxC,UAAU,WACf,yBAAKA,UAAU,OACP3B,KAAKhF,MAAM8D,cAAc8E,KAAI,SAAClF,EAAOV,GACpC,OACE,yBAAK2D,UAAU,kBAAmBG,QAAS,WAAO,EAAKlG,SAAS,CAACkC,MAAOY,EAAK,MAAWG,eAAeH,EAAK,QAAa1B,QAAQ0B,EAAK,WAAgBxC,WAAY,sBAC/JwC,EAAK,oB,sCAWNL,GAAS,IAAD,OAoBtB,OACE,yBAAKsD,UAAU,gBACZtD,EAAM,OAAWuF,KAAI,SAAClF,EAAOV,GAE5B,OAEE,yBAAK2D,UAAU,iBAAiBC,MAAO,CAACqC,OAAQ,IAAM5F,EAAM,OAAWiD,QAAQ4C,WAAa,IAAKrC,YAzB9E2C,EAyB2G9F,EAXjH,MAAf8F,EACK,YAdI,CACE,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aAIDC,KAAKC,MAAMF,EAAW,OAQyGH,MAAOhG,EAAM,UAAcL,GAAQ8D,QAAS,WAAO,EAAKlG,SAA6B,WAAnB,EAAKZ,MAAMQ,KAAoB,CAAC8E,eAAejC,EAAM,QAAYL,GAAQ9B,WAAY,UAAW,MACtSwC,EACD,yBAAKiD,UAAU,aAAatD,EAAM,aAAiBL,KA3B7D,IAA2BwG,Q,+CAoCH,IAAD,OACvB,OACC,6BAEMxE,KAAKhF,MAAM8D,cAAc8E,KAAI,SAAClF,EAAOV,GACpC,OACE,yBAAK2D,UAAU,OACb,yBAAKA,UAAU,0BACXjD,EAAK,KACN,yBAAKiD,UAAU,SAAf,IAAyBjD,EAAK,OAAL,MAAzB,MAEF,EAAKiG,gBAAgBjG,EAAK,e,gDASvC,OACC,6BACG,yBAAKiD,UAAU,OACb,yBAAKA,UAAU,0BAAf,OAEG,yBAAKA,UAAU,SAAf,iBAEH,yBAAKA,UAAU,gBACb,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKiC,KAAI,SAAClF,EAAOV,GACrC,OACG,yBAAK2D,UAAU,iBAAiBC,MAAO,CAACqC,OAAQ,IAAM,GAAGC,WAAa,MACpExF,EADF,kB,gDAcX,OACD,yBAAKiD,UAAU,UACb3B,KAAKmE,eACN,yBAAKxC,UAAU,WAIT3B,KAAK4E,0BACL5E,KAAK6E,6B,uCAMM,IAAD,OACf,OACE,yBAAKlD,UAAU,UAClB3B,KAAKmE,eACHnE,KAAK8E,oBACR,yBAAKnD,UAAU,WACT,wBAAIA,UAAU,QAAd,IAAuB3B,KAAKhF,MAAMiD,SAAS+B,KAAKhF,MAAMmD,iBAAtD,KACA,yBAAKwD,UAAU,aACb,yBAAKA,UAAU,gBACb,4BAAQA,UAAU,sBAAsBG,QAAS,WAAO,EAAKlD,UAAU,SAAvE,eACA,4BAAQ+C,UAAU,qBAAqBG,QAAS,WAAO,EAAKlD,UAAU,QAAtE,uB,oCAQK,IAAD,OACZ,OACG,yBAAK+C,UAAU,UAClB3B,KAAKmE,eACP,yBAAKxC,UAAU,WACf,wBAAIC,MAAO,CAAEmD,aAAc,KAA3B,YACM,yBAAKpD,UAAU,OACZ3B,KAAKhF,MAAM6C,OAAO+F,KAAI,SAAClF,EAAOV,GAC7B,OACE,yBAAK2D,UAAU,SAASqD,IAAKhH,GAC3B,yBAAK2D,UAAU,kBAAkBC,MAAO,CAACqD,aAAc,IAAKnD,QAAS,WAAO,EAAKlG,SAAS,CAAC+C,SAAUD,EAAK,SAAcxC,WAAY,YACjIwC,EAAK,gB,oCAWP,IAAD,OACZ,OACG,yBAAKiD,UAAU,UAClB3B,KAAKmE,eACH,yBAAKxC,UAAU,WACnB,wBAAIC,MAAO,CAAEmD,aAAc,KAA3B,cACM,yBAAKpD,UAAU,OACZ3B,KAAKhF,MAAM2D,SAASiF,KAAI,SAAClF,EAAOV,GAC/B,OACE,yBAAK2D,UAAU,SAASqD,IAAKhH,GAC3B,yBAAK2D,UAAU,oBAAoBC,MAAO,CAACqD,aAAc,IAAKnD,QAAS,WAAO,EAAKlG,SAAS,CAACqC,SAAUS,EAAK,OAAYxC,WAAY,eAApI,IAAqJwC,EAAK,gBAMvK,6BACA,6BACA,6BACA,6BACA,yBAAKiD,UAAU,OACf,4BAAQA,UAAU,cAAcG,QAAS,WAAO,EAAKlG,SAAS,CAACM,WAAY,YAA3E,iB,iCAQC,IAAIgJ,EAAYlF,KAAKhF,MAAM+C,gBAAkB,EAC1CmH,EAAYlF,KAAKhF,MAAM8C,MAAMwD,OAC9BtB,KAAKpE,SAAS,CACZmC,gBAAiBmH,EACjBjH,SAAU+B,KAAKhF,MAAM8C,MAAMoH,GAAjB,OACV/G,gBAAiB,EACjBS,UAAW,GACXR,WAAY,GACZP,OAAQ,GACRQ,OAAQ,GACRnC,WAAY,aAGd8D,KAAKU,kB,2CAIa,IAAD,SACpB,OACD,yBAAKiB,UAAU,UACb3B,KAAKmE,eACN,yBAAKxC,UAAU,WACV,yBAAKA,UAAU,YAAf,IAA2B,yFAA3B,IAA6F,6BAA7F,IAAoG,6BAApG,+CACuE,4BAAQA,UAAU,uBAAlB,eADvE,eAC+I,6BAD/I,IACsJ,6BADtJ,8EAEsG,4BAAQA,UAAU,sBAAlB,iBAFtG,kBAGD,6BACI,6BACA,+BAAQC,MAAO,CAACqD,aAAc,KAA9B,sBAA0C,CAACA,aAAc,GAAIE,OAAO,cAApE,yBAA2F,WAAO,EAAKvJ,SAAS,CAACM,WAAY,gBAA7H,sB,uCAQS,IAAD,OAChB,OACD,yBAAKyF,UAAU,UACb3B,KAAKmE,eACN,yBAAKxC,UAAU,WACV,yBAAKA,UAAU,YAAf,yGACA,yBAAKA,UAAU,iBAAf,IAAiC3B,KAAKhF,MAAM0F,cAAX,MAAjC,WAEA,yBAAKiB,UAAU,0BAA0BC,MAAO,CAACwD,WAAW,SAC5D,yBAAKzD,UAAU,iBAEf,yBAAKA,UAAU,gBACZ,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKiC,KAAI,SAAClF,EAAOV,GACtC,OACE,yBAAK2D,UAAU,iBAAiBC,MAAO,CAACqC,OAAQ,IAAM,GAAGC,WAAa,MACnExF,EADH,cAOL,yBAAKiD,UAAU,iBAEd3B,KAAK2E,gBAAgB3E,KAAKhF,MAAM0F,gBAEjC,6BACA,6BACA,yBAAKiB,UAAU,MAAMC,MAAO,CAACyD,eAAgB,WACzC,4BAAQ1D,UAAU,cAAcG,QAAS,WAAO,EAAKlG,SAAS,CAACM,WAAY,YAA3E,e,qCAOM,IAAD,OAEM8D,KAAKhF,MAAMsF,eAAe,GAC7C,OACE,6BACF,6BACA,6BACI,wCACHN,KAAKhF,MAAMsF,eAAesD,KAAI,SAAC0B,EAActH,GAC5C,OACE,6BACA,4BAAKsH,EAAY,WACjB,yBAAK3D,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,OAAOC,MAAO,CAACqD,aAAc,KAC1C,oCAAa,6BACb,4BAAKK,EAAY,QAAZ,QAGT,yBAAK3D,UAAU,UACb,yBAAKA,UAAU,OAAOC,MAAO,CAACqD,aAAc,KAC1C,0CAAmB,6BACnB,4BAAKK,EAAY,QAAZ,cAGT,yBAAK3D,UAAU,UACb,yBAAKA,UAAU,OAAOC,MAAO,CAACqD,aAAc,KAC1C,qCAAc,6BACd,4BAAKK,EAAY,QAAZ,UAIP,yBAAK3D,UAAU,OACd2D,EAAY,OAAW1B,KAAI,SAAClF,EAAOV,GAClC,OACE,yBAAK2D,UAAU,2BAA2BqD,IAAKhH,GAClD,EAAKuH,iBAAiBD,EAAY,oBAAwBtH,GAAQU,QAKrE,yBAAKiD,UAAU,OACb,4BAAQA,UAAU,cAAcG,QAAS,WAAO,EAAKlG,SAAS,CAACM,WAAY,sBAA3E,aAEN,6BACA,oC,yCAQgB,IAAD,OACjB,OACE,yBAAKyF,UAAU,UAClB3B,KAAKmE,eACHnE,KAAK8E,oBACN,6BACA,6BACF,yBAAKnD,UAAU,OACd,yBAAKA,UAAU,UACb,yBAAKA,UAAU,OAAOC,MAAO,CAACqD,aAAc,KAC1C,oCAAa,6BACb,4BAAKjF,KAAKhF,MAAMqD,OAAX,QAGT,yBAAKsD,UAAU,UACb,yBAAKA,UAAU,OAAOC,MAAO,CAACqD,aAAc,KAC1C,0CAAmB,6BACnB,4BAAKjF,KAAKhF,MAAMqD,OAAX,eAIJ,yBAAKsD,UAAU,OACZ,4BAAQC,MAAO,CAACqD,aAAc,IAAKnD,QAAS,WAAO,EAAK0D,aAAxD,SAA6ExF,KAAKhF,MAAM+C,gBAAkB,EAA1G,S,oCAMM,IAAD,OACZ,OACE,yBAAK4D,UAAU,UAClB3B,KAAKmE,eACHnE,KAAK8E,oBACN,6BACA,6BACI,yBAAKnD,UAAU,cACb,6BACN,yBAAKA,UAAU,iBAAf,kBAED,yBAAKA,UAAU,OACV,6BACJ,yBAAKA,UAAU,aAAa3B,KAAKhF,MAAMqD,OAAX,QAE1B,6BACF,yBAAKsD,UAAU,iBAAiB3B,KAAKhF,MAAMqD,OAAX,UAExB,yBAAKsD,UAAU,OACZ,4BAAQA,UAAU,SAASC,MAAO,CAACqD,aAAc,GAAIE,OAAO,aAAcrD,QAAS,WAAO,EAAK0D,aAA/F,e,uCAOK5G,EAAWF,GAC7B,IAAI+G,EAEDC,EAAY,QAkBhB,MAjBkB,QAAd9G,EACH6G,EAAU,YACc,UAAd7G,GAER6G,EAAU,8IACZC,EAAY,SACY,YAAd9G,GAGV6G,EAAU,YACVC,EAAY,SAGVD,EAAU,gJAKT,yBAAK9D,UAAU,mBAAmBC,MAAO,CAACK,MAAOyD,EAAW7D,WAAY4D,IACtE,wBAAI7D,MAAO,CAAC+D,UAAW,SAAU1C,QAAS,eAA1C,IAA2DvE,M,+BAM9D,OACI,yBAAKiD,UAAW,aACf3B,KAAKf,MAAMe,KAAKhF,MAAMkB,cACtB8D,KAAKhF,MAAMa,UACV,yBAAK8F,UAAU,WACb,yBAAKA,UAAU,cACb,8BACA,8BACA,8BACA,8BACA,gCAEK,U,GA9pCDiE,aAwqCZC,E,YACJ,WAAYlL,GAAQ,IAAD,8BACjB,4CAAMA,KAMRmL,aAAe,SAAC3E,GACd,EAAKvF,SAAS,CACZmK,OAAQC,SAAS7E,EAAE8E,cAAcC,WAAWC,IAAIzH,UAPlD,EAAK1D,MAAQ,CACX+K,OAAQ,GAHO,E,sEAaT,IAAD,OACHK,EAAU,GACRC,EAAOrG,KAAKrF,MAAMwB,KAAKyH,KAAI,WAAgB0C,GAAO,IAAD,mBAApB3D,EAAoB,KAAb4D,EAAa,KAErD,OADAH,EAAU,EAAKpL,MAAM+K,SAAWO,EAAIC,EAAOH,EACpC,wBACEzE,UAAW,EAAK3G,MAAM+K,SAAWO,EAAI,aAAe,MACpDtB,IAAKrC,EACLwD,IAAKG,EACLxE,QAAS,EAAKgE,cACpBnD,MAIL,OACE,6BAAShB,UAAU,QACjB,8BACE,4BACG0E,IAGL,6BACGD,Q,GAnCQR,aC/qCCY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAS9F,SAAS+F,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlL,MAAK,SAAAmL,GACjCA,EAAaC,kB","file":"static/js/main.75581028.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import axios from 'axios';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox, Select, FormControl, InputLabel, MenuItem} from '@material-ui/core';\nimport { Face, Fingerprint } from '@material-ui/icons'\n\nconst styles = theme => ({\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n});\n\n// var HOST = '134.2.128.120/vocabulary-test/' \nvar HOST = '127.0.0.1:8080' \n\nclass App extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            user: \"Me\",\n\n            // Test session\n            tests: [],\n            testsets: [],\n            activeTestIndex: '',\n\n            // For each test\n            wordList: [],\n            activeWordIndex: 0,\n            selection: \"\",\n            selections: [],\n            levels: [],\n            result: {},\n\n      \t\t\t// Admin exp\n            experiment: \"\",\n            \n            // Teacher\n            studentResults: [],\n            teacherReport: [],\n            expName: \"\",\n            aStudentResult: [],\n            metrics: {},\n\n            // UI Handling\n            isLoading: false,\n\n            activePage: \"signup\",\n\n            // Login details\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n\t\t\t      role: \"student\",\n            teacher: \"\",\n            email: \"\",\n            password: \"\",\n            dob: \"\",\n            message: \"\",\n            \n            // User maintenance\n            userList: [],\n        };\n\n      this.pages = {\n         \"login\": this.renderLogin.bind(this),\n         \"signup\": this.renderSignup.bind(this),\n        //  \"landing\": this.renderDashboard.bind(this),\n         \"instructions\": this.renderInstructions.bind(this),\n         \"adminlanding\": this.renderAdminDashboard.bind(this),\n        //  \"teacherlanding\": this.renderTeacherDashboard.bind(this),\n         \"teacherlanding1\": this.renderTeacherDashboard1.bind(this),\n         \"activity\": this.renderActivity.bind(this),\n         \"index\": this.renderIndex.bind(this),\n         \"level\": this.renderLevel.bind(this),\n         \"report\": this.renderReport.bind(this),\n         \"minireport\": this.renderMiniReport.bind(this),\n         \"score\": this.renderScore.bind(this),\n         \"thankyou\": this.renderThankyou.bind(this),\n      }; \n   }\n\n  signup = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      teacher: stateData.teacher,\n      email: stateData.email,\n      dob: stateData.dob\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/signup', user, config)\n      .then(response => {\n        this.setState({activePage: response.data.isValid ? \"login\" : 'signup',\n\t\t\t\t\t   message: response.data.message,\n                       isLoading: false})\n      })\n  }\n\n  addTeacher = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.tfirstName,\n      lastname: stateData.tlastName,\n      // middlename: stateData.middleName,\n      // email: stateData.email,\n      // dob: stateData.dob,\n      password: stateData.tpassword\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/addteacher', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       userList: response.data.user_list, \n                       isLoading: false})\n      })\n  }\n\n  removeuser(uid) {\n    const user = {\n      uid: uid,\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/removeuser', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       userList: response.data.user_list,\n                       isLoading: false})\n      })\n  }\n\n  getUserList(roles) {\n    const user = {\n      query: roles \n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getuserlist', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       userList: response.data.user_list,\n                       isLoading: false})\n      })\n  }\n\n  prepareDetailedReport(testCodes, report) {\n    const user = {\n      test_codes: testCodes \n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/preparedetailedreport', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       tests: response.data.tests,\n                       detailedReport: report,\n                       ARI: 0,\n                       isLoading: false})\n      })\n  }\n\n  defineExperiment = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n      experiment: stateData.experimentDef,\n      expName : stateData.expName\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/defineexp', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       experiments: response.data.experiments,\n                       expName: '',\n                       experimentDef: '',\n                       isLoading: false})\n      })\n  }\n\n  selectExperiment (uid) {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n      active_id : uid\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/selectexp', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       activeExp: uid,\n                      isLoading: false})\n      })\n  }\n\n\n  studentReport () {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/studentreport', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       studentReport: response.data.result,\n                       activeTestIndex: 0,\n                       activeWordIndex: 0,\n                       selection: \"\",\n                       selections: [],\n                       levels: [],\n                       isLoading: false,\n                       activePage:\"thankyou\"})\n      })\n  }\n  \n  login = event => {\n    event.preventDefault();\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      password: stateData.password\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/login', user, config)\n      .then(response => {\n\t  if (response.data.isValid) {\n\t\t  if (response.data.role === 'Admin') {\n           const user = {\n           };\n           this.getExperiments();\n         }\n      else if(response.data.role === 'Teacher') {\n        this.setState({\n          role: 'Teacher',\n          password: response.data.password,\n        });\n        this.getTeacherReport();\n      }\n\t    else {\n\t  \t  this.getTests();\n      }\n\t\t}\n\t  else {\n        this.setState({\n\t\t\t// activePage: response.data.isValid ? 'activity': 'login',\n\t\t\tactivePage: 'login',\n\t\t\tmessage: response.data.message,\n            password: response.data.password,\n            isLoading: false});\n\t    }\n      })\n  }\n\n  getTeacherReport() {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      password: stateData.password,\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    // axios.post('http://' + HOST + '/api/v1/getteacherreport', user, config)\n    axios.post('http://' + HOST + '/api/v1/consolidatedreport', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       teacherReport: response.data.teacher_report,\n                       isLoading: false,\n                       activePage: 'teacherlanding1'\n                       })\n      })\n  }\n\n  getExperiments() {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      password: stateData.password\n    };\n    this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/experiments', user, config)\n      .then(response => {\n       this.setState({role: 'Admin',\n       \t           activePage: 'adminlanding',\n                      password: response.data.password,\n                      experiments: response.data.experiments,\n                      userList: response.data.user_list,\n                      activeExp: response.data.active_exp,\n               \t   isLoading: false});\n      })\n   }\n  \n  update(selections) {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      testcode: this.state.tests[this.state.activeTestIndex]['test_code'],\n      selections: selections\n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/updateresponse', user, config)\n      .then(response => {\n        this.setState({message: response.data.message\n                       })\n      })\n  }\n\n  download = event => {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      exp_id: stateData.expId,\n      teacher_id: stateData.teacher\n    };\n    // this.setState({ isLoading: true })\n    // let config = { \"Content-Type\": \"application/zip\" };\n    let config = { \"Content-Type\": \"application/force-download\" };\n    axios.get('http://' + HOST + '/api/v1/export', user, config)\n      .then(response => {\n        this.setState({message: 'Done'})\n      })\n  }\n\n  report(selections, page) {\n    let stateData = this.state;\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      selections: selections,\n      testcode: this.state.tests[this.state.activeTestIndex]['test_code'],\n    };\n    // this.setState({ isLoading: true })\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getresult', user, config)\n      .then(response => {\n        this.setState({message: response.data.message,\n                       result: response.data.result,\n                       activePage: page\n            })\n      })\n  }\n\n  getLevels = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getlevels', user, config)\n      .then(response => {\n        this.setState({\n          levels: response.data.levels,\n          isLoading: false,\n          activePage: \"index\",\n        })\n      })\n  }\n\n  getTests = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      firstname: stateData.firstName,\n      lastname: stateData.lastName,\n      middlename: stateData.middleName,\n      role: stateData.role,\n      email: stateData.email,\n      password: stateData.password,\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/gettests', user, config)\n      .then(response => {\n        this.setState({\n          tests: response.data.tests,\n          isLoading: false,\n          activeTestIndex: response.data.index,\n          wordList: response.data.tests[response.data.index]['tokens'],\n          // activePage: \"activity\"\n          activePage: \"instructions\"\n        })\n      })\n  }\n\n  getWordList = (event) => {\n    let stateData = this.state;\n    this.setState({ isLoading: true })\n    const user = {\n      username: stateData.user,\n    };\n    let config = { \"Content-Type\": \"application/json\" };\n    axios.post('http://' + HOST + '/api/v1/getwordlist', user, config)\n      .then(response => {\n        this.setState({\n          wordList: response.data.wordList,\n          activeWordIndex: 0,\n          selections: [],\n          isLoading: false,\n          activePage: \"activity\",\n          result: {}\n        })\n      })\n  }\n\n  componentWillMount() {\n    this.getUserList([\"Teacher\"]);\n    this.setState({activePage: 'signup'});\n    document.addEventListener(\"keyup\", this.handleKeyPress.bind(this));\n  }\n\n  handleKeyPress (e) {\n    if (e.which === 89) { \n       this.selection(\"yes\")\n    }\n    else if (e.which === 78) {\n       this.selection(\"no\")\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  selection (choice) {\n\tif (this.state.activeWordIndex + 1 <= this.state.wordList.length) {\n    var joined = this.state.selections.concat(choice);\n    var page = this.state.activePage\n    if(joined.length >= this.state.wordList.length && this.state.wordList.length > 0) {\n       // this.update(joined)\n       // page = \"minireport\"\n       page = \"score\"\n       // page = \"report\"\n       this.report(joined, page)\n    }\n\n    this.setState({\n        selection: choice,\n        activeWordIndex: this.state.activeWordIndex + 1,\n        selections: joined,\n        activePage: page\n    })\n   } \n  }\n\n  renderLogin() {\n        const { classes } = this.props;\n    return ( \n\t\t\t <Paper className=\"login_card\">\n\t\t\t   <div className=\"switch_container\">\n\t\t\t     <div className=\"login_switch\" style={{background: \"#47d836\"}} onClick={() => {this.setState({activePage: 'signup', message:\"\"})}}>\n\t\t\t     Signup \n\t\t\t     </div>\n\t\t\t   </div>\n\n\t\t\t   <h1>Login</h1>\n\t\t\t   <form  onSubmit={this.login} style={{marginTop:\"30px\"}}>\n\t\t\t\t\t  <div>\n    \t\t\t\t\t  <div className='authAlert' style={{color: 'blue'}}>{this.state.message}</div>\n\t\t\t\t\t  </div>\n                <div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"firstName\" label=\"First Name\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"middleName\" label=\"Middle Name\" type=\"text\" fullWidth onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"lastName\" label=\"Last Name\" type=\"text\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"password\" label=\"Password\" type=\"password\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '25px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Login</Button>\n                    </Grid>\n                </div>\n\t\t\t  </form>\n            </Paper>\n    );\n  }\n\n  renderSignup() {\n\treturn (\n\t\t\t <Paper className=\"login_card\">\n\t\t\t\t<div className=\"switch_container\">\n\t\t\t\t\t  <div className=\"login_switch\" onClick={() => {this.setState({activePage: 'login', message: \"\"})}}>\n\t\t\t\t\t  Login\n\t\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t   <h1>Signup</h1>\n\t\t\t   <form  onSubmit={this.signup} style={{marginTop:\"30px\"}}>\n\n\t\t\t\t\t  <div>\n    \t\t\t\t\t  <div className='authAlert' style={{color: 'red'}} >{this.state.message}</div>\n\t\t\t\t\t  </div>\n                <div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"firstName\" label=\"First Name\" type=\"text\" fullWidth autoFocus required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"middleName\" label=\"Middle Name\" type=\"text\" fullWidth onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"lastName\" label=\"Last Name\" type=\"text\" fullWidth required onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n\t\t\t\t\t<Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n\t\t\t\t\t\t<FormControl fullWidth required>\t\n\t\t\t\t\t\t\t<InputLabel id=\"teachers\">Teacher</InputLabel>\n\t\t\t\t\t\t\t<Select labelId=\"teachers\" name=\"teacher\" value={this.state.teacher} onChange={this.handleChange}>\n                <MenuItem value=\"\"><em>None</em></MenuItem>\n                {this.state.userList.map((value, index) => {\n                  return (\n                    <MenuItem value={value['id']}>{value['fullname']}</MenuItem>\n                  )\n                })}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"5e2ebbd9e414a94dc67fd995\">Bleicher</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e3454f8cc0b53337bc5fa13\">Meurers</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e34554acc0b53337bc5fa14\">Deeg</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbaae414a94dc67fd994\">Goedicke</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher3\">Howind</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher4\">Lang</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher5\">Rehberger</MenuItem> */}\n\t\t\t\t\t\t\t  {/* <MenuItem value=\"teacher6\">Spiegelhalter</MenuItem> */}\n\t\t\t\t\t\t\t</Select>\n                        </FormControl>\n\t\t\t\t\t\t </Grid>\n\t\t\t        </Grid>\n                    <br />\n                    <div className=\"card\">\n                      Note: Password Generation Example \n                    <br />\n                      First name: Sherlock\n                    <br />\n                      Last name: Holmes\n                    <br />\n                      Day of birth: 15 \n                    <br />\n                    <br />\n                      Then the password is <b>sh15</b>\n                    </div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"dob\" label=\"Day of Birth (1-31)\" type=\"number\" inputProps={{ min: \"1\", max: \"31\", step: \"1\" }} fullWidth onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\" style={{display: \"none\"}}>\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"email\" label=\"E-mail\" type=\"email\" fullWidth onChange={this.handleChange} />\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Sign up</Button>\n                    </Grid>\n                </div>\n\t\t\t  </form>\n            </Paper>\n\t);\n  }\n\n  renderCheckoutbar() {\n    return (\n\t\t<div className=\"checkout-wrap\">\n      <div className=\"checkout-bar-empty\"></div>\n\t\t  <ul className=\"checkout-bar\">\n          \t{this.state.tests.map((value, index) => {\n            \treturn (\n\t\t\t\t  <li style={{width: (index !== this.state.activeTestIndex? 6 : 100 - (this.state.tests.length - 1) * 6).toString() + '%'}} className={index === this.state.activeTestIndex? 'active' : index < this.state.activeTestIndex? 'visited' : ''}> <div className=\"bar\" style={{ width: (this.state.activeWordIndex / this.state.wordList.length) * 96+ \"%\" }}></div> {value['test_code'][5]}&#9734;</li>\n            \t)\n          \t})}\n\t\t  </ul>\n\t\t</div>\n\n    );\n  }\n\n  renderHeader() {\n  \treturn (\n\t\t<div>\n\t\t\t<div className='header'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='AppName'>DoYouKnowIt?</div>\n\t\t\t\t\t<div className='username' onClick={() => {this.setState({activePage: \"login\"})}}>{this.state.firstName}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n renderDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t\t\t<div className=\"row\">\n\t\t\t<button className=\"dashboardCard\" onClick={this.getLevels}>English vocabulary test </button>\n\t\t\t<button className=\"dashboardCard\" style={{background: \"linear-gradient(45deg, rgb(98, 255, 0), rgba(0, 0, 0, 0.79))\"}}>Science MCQs</button>\n\t\t\t<button className=\"dashboardCard\" style={{background: \"linear-gradient(45deg, rgba(224, 106, 23, 0.92), rgba(6, 3, 222, 0.79))\"}}>Maths Assignment 01</button>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n renderAdminDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div style={{padding: \"2%\"}}>\n      <div className=\"tabs\">\n        <Tabs data={[\n          [\"Experiment\", \n          <div>\n            <div className=\"exp_container\">\n              {this.state.experiments.map((value, index) => {\n                return (\n                  // <div className=\"tooltip\">\n                  <button className={this.state.activeExp === value[0]? \"exp_button active\" : \"exp_button\"} title={value[2]} onClick={() => {this.selectExperiment(value[0])}}> {value[1]} </button>\n                  // <button className={this.state.activeExp === value[0]? \"exp_button active\" : \"exp_button\"} title={value[2]} > {value[1]} </button>\n                  // <span className=\"tooltiptext\"> {value[2]}</span>\n                  // </div>\n                )\n                })}\n              </div>\n           <div className=\"card\" style={{\"color\": \"dimgrey\", \"left\": \"-13px\", \"width\": \"100%\", \"border-width\": \"initial\", \"border-color\": \"#a9a9a9\"}}>\n             Choose the testsets within the following range.\n             101-120, \n             201-220, \n             301-320, \n             401-420, \n             501-520, \n             601-620 \n             <br />\n             <br />Example: <b>102;201;311;403;514</b>\n           </div>\n\t\t\t     <form onSubmit={this.defineExperiment}>\n                        <Grid container spacing={8} alignItems=\"flex-end\">\n                            <Grid item md={true} sm={true} xs={true}>\n                                <TextField name=\"expName\" label=\"Exercise Name\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange}/>\n                                <TextField name=\"experimentDef\" label=\"Test Sequence\" type=\"text\" fullWidth required  onChange={this.handleChange}/>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n                            <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Save</Button>\n                        </Grid>\n\t\t\t     </form>\n           </div>]\n          ,\n          [\"Export\",\n          <div>\n      <div className='row'>\n\t\t\t  <form onSubmit={this.download}>\n\t\t\t\t\t<Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n\t\t\t\t\t\t<FormControl fullWidth required>\t\n\t\t\t\t\t\t\t<InputLabel id=\"teachers\">Teacher</InputLabel>\n\t\t\t\t\t\t\t<Select labelId=\"teachers\" name=\"teacher\" value={this.state.teacher} onChange={this.handleChange}>\n\t\t\t\t\t\t\t  <MenuItem value=\"\"><em>None</em></MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbd9e414a94dc67fd995\">Bleicher</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e3454f8cc0b53337bc5fa13\">Meurers</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e34554acc0b53337bc5fa14\">Deeg</MenuItem>\n\t\t\t\t\t\t\t  <MenuItem value=\"5e2ebbaae414a94dc67fd994\">Goedicke</MenuItem>\n\t\t\t\t\t\t\t</Select>\n            </FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t   </Grid>\n\t\t\t\t\t<Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n\t\t\t\t\t\t<FormControl fullWidth required>\t\n\t\t\t\t\t\t\t<InputLabel id=\"experiment\">Experiment</InputLabel>\n\t\t\t\t\t\t\t<Select labelId=\"experiment\" name=\"expId\" value={this.state.expId} fullWidth onChange={this.handleChange}>\n\t\t\t\t\t\t\t  <MenuItem value=\"\"><em>None</em></MenuItem>\n          \t    {this.state.experiments.map((value, index) => {\n                  return (\n\t\t\t\t\t\t\t    <MenuItem value={value[0]}>{value[1]}</MenuItem>\n               \t)\n          \t    })}\n\t\t\t\t\t\t\t</Select>\n            </FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t   </Grid>\n          <Grid container justify=\"center\" style={{ marginTop: '20px' }}>\n              <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Download</Button>\n          </Grid>\n\t\t\t  </form>\n      </div>\n\t\t\t</div>\n    ],\n          [\"Users\",\n           <div> \n             {this.state.userList.map((value, index) => {\n                return(\n                  <div className={value[\"role\"] + \" userrow\"}>\n                    <div style={{\"width\": \"98%\", \"display\": \"flex\"}}>\n                      <div className='usercard' style={{\"width\": \"90%\"}}>{value[\"name\"]}</div>\n                      <div className='usercard'>{value[\"role\"]}</div>\n                    </div>\n                    <div className=\"removeuser\" onClick={() => {this.removeuser(value[\"id\"])}} style={{\"width\": \"1%\"}}> x </div>\n                  </div>\n                );\n             })}\n              <div>ipqngpng</div>\n\t\t\t        <form  onSubmit={this.addTeacher} style={{marginTop:\"20px\"}}>\n                <div>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"tfirstName\" label=\"First Name\" type=\"text\" fullWidth autoFocus required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"tlastName\" label=\"Last Name\" type=\"text\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={8} alignItems=\"flex-end\">\n                        <Grid item md={true} sm={true} xs={true}>\n                            <TextField name=\"tpassword\" label=\"Password\" type=\"password\" fullWidth required  onChange={this.handleChange}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container justify=\"center\" style={{ marginTop: '25px' }}>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Login</Button>\n                    </Grid>\n                </div>\n\t\t\t        </form>\n           </div>],\n        ]}/>\n        \n        </div>\n        </div>\n        </div>\n\t);\n  }\n\n renderTeacherDashboard() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t\t\t<div className=\"row\">\n          {this.state.teacherReport.map((value, index) => {\n            return (\n              <div className=\"card level_card\"  onClick={() => {this.setState({tests: value['tests'], studentResults:value['results'], expName:value[\"definition\"], activePage: 'teacherlanding1'})}}>\n                {value[\"definition\"]}\n              </div>\n            )\n          })}\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n\nrenderScoreCell(result) {\n  function percentageToColor(percentage) {\n  const colors = [\n                   \"#c50000a8\",\n                   \"#c42a00a8\",\n                   \"#c35400a8\",\n                   \"#c27d00a8\",\n                   \"#c1a600a8\",\n                   \"#b2c000a8\",\n                   \"#88bf00a8\",\n                   \"#5fbe00a8\",\n                   \"#36bd00a8\",\n                   \"#0dbc00a8\",\n                   \"#00bb1ba8\",\n                   \"#00bb1ba8\"]\n    if (percentage === '-'){\n      return \"#d2d2cda8\"\n    }\n    return colors[Math.floor(percentage/10)];\n  }\n  return (\n    <div className=\"col-lg-9 row\">\n      {result[\"scores\"].map((value, index) => {\n      {/* {result.map((value, index) => { */}\n        return(\n          // <div className=\"scoreCell card\" style={{width: (100 / result.length).toString() + \"%\", background:percentageToColor(value[\"metrics\"][\"score\"])}}  onClick={() => {this.setState({wordList: this.state.tests[index]['tokens'], metrics:value['metrics'], selections:value['evaluated_responses'], activePage: 'report'})}}>\n          <div className=\"scoreCell card\" style={{width: (100 / result[\"scores\"].length).toString() + \"%\", background:percentageToColor(value)}} title={result[\"testcases\"][index]} onClick={() => {this.setState( this.state.role == 'Teacher' ? {detailedReport:result['reports'][index], activePage: 'report'}: {})}}>\n            {value}\n            <div className=\"subscript\">{result[\"distribution\"][index]}</div>\n          </div>\n        )\n      })\n      }\n    </div>\n  );\n}\n\nrenderResultTableEntry() {\n  return (\n\t  <div>\n        {/* {this.state.studentResults.map((value, index) => { */}\n        {this.state.teacherReport.map((value, index) => {\n          return (\n            <div className=\"row\">\n              <div className=\"scoreRow col-lg-3 card\">\n                 {value[\"name\"]}\n                 <div className=\"vocab\"> {value[\"result\"][\"vocab\"]} </div>\n              </div>\n              {this.renderScoreCell(value[\"result\"])}\n            </div>\n          )\n        })}\n\t  </div>\n  )\n}\n\nrenderResultTableHeader() {\n  return (\n\t  <div>\n      <div className=\"row\">\n        <div className=\"scoreRow col-lg-3 card\">\n           Name\n           <div className=\"vocab\"> vocab size </div>\n        </div>\n        <div className=\"col-lg-9 row\">\n         {['1','2','3','4','5','6'].map((value, index) => {\n           return(\n              <div className=\"scoreCell card\" style={{width: (100 / 6).toString() + \"%\"}}>\n               {value}&#9734;\n             </div>\n           )\n         })\n         }\n        </div>\n      </div>\n\t  </div>\n  )\n\n}\n\nrenderTeacherDashboard1() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n\t      {/* <div className='row'> */}\n\t        {/* <button className='button back' onClick={() => {this.setState({activePage: 'teacherlanding'})}}> &#8617; </button> */}\n\t      {/* </div> */}\n        {this.renderResultTableHeader()}\n        {this.renderResultTableEntry()}\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n  renderActivity() {\n    return (\n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n    {this.renderCheckoutbar()}\n\t\t<div className=\"content\">\n        <h1 className=\"word\"> {this.state.wordList[this.state.activeWordIndex]} </h1>\n        <div className=\"col-md-12\">\n          <div className=\"row card_ctr\">\n            <button className=\"button option green\" onClick={() => {this.selection(\"yes\")}}> known (y) </button>\n            <button className=\"button option grey\" onClick={() => {this.selection(\"no\")}}> unknown (n) </button>\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderIndex() {\n    return(\n      \t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t<div className=\"content\">\n\t\t<h1 style={{ marginBottom: 30 }}> Levels </h1>\n        <div className=\"row\">\n          {this.state.levels.map((value, index) => {\n            return (\n              <div className=\"column\" key={index}>\n                <div className=\"card level_card\" style={{borderRadius: 10}} onClick={() => {this.setState({testsets: value['testsets'], activePage: 'level'})}}>\n                  {value['level']}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\t  </div>\n\t </div>\n    );\n  }\n\n  renderLevel() {\n    return(\n      \t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n      <div className=\"content\">\n\t\t<h1 style={{ marginBottom: 30 }}> Testsets </h1>\n        <div className=\"row\">\n          {this.state.testsets.map((value, index) => {\n            return (\n              <div className=\"column\" key={index}>\n                <div className=\"card testset_card\" style={{borderRadius: 10}} onClick={() => {this.setState({wordList: value['tokens'], activePage: 'activity'})}}> {value['test_code']}\n                </div>\n              </div>\n            )\n          })}\n      </div>\n\t  <br />\n\t  <br />\n\t  <br />\n\t  <br />\n\t  <div className='row'>\n\t  <button className='button back' onClick={() => {this.setState({activePage: 'index'})}}> &#8617; </button>\n\t  </div>\n\t</div>\n\t</div>\n    );\n  }\n\n  nextTest() {\n    var testIndex = this.state.activeTestIndex + 1;\n    if(testIndex < this.state.tests.length) {\n      this.setState({\n        activeTestIndex: testIndex,\n        wordList: this.state.tests[testIndex]['tokens'],\n        activeWordIndex: 0,\n        selection: \"\",\n        selections: [],\n        levels: [],\n        result: {},\n        activePage: 'activity'})\n    }\n    else {\n      this.studentReport();\n    }\n  }\n\n  renderInstructions() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        <div className=\"instruct\"> <b> Read through the list of words carefully. For each word: </b> <br /> <br />\n                                   if you know what it means, click 'y' key or <button className=\"button option green\"> known (y) </button> (for YES)  <br /> <br />\n                                   if you don't know what it means, or if you aren't sure, click 'n' or click <button className=\"button option grey\"> unknown (n) </button> key (for NO).</div>\n\t      <div>\n           <br />\n           <button style={{borderRadius: 10}} style={{borderRadius: 10, margin:\"40px auto\"}} onClick={() => {this.setState({activePage: 'activity'})}} > Continue </button>\n        </div>\n\t\t\t</div>\n      \n\t\t</div>\n\t);\n  }\n\n  renderThankyou() {\n  \treturn (\n\t\t<div className=\"canvas\">\n\t\t\t{this.renderHeader()}\n\t\t\t<div className=\"content\">\n        <div className=\"thankyou\"> Thank you for the participation. Based on your interactions, your English vocabulary size is atleast</div>\n        <div className=\"student_vocab\"> {this.state.studentReport[\"vocab\"]} words </div>\n        {/* <div style={{textAlign:\"center\", marginTop:\"5px\", marginBottom:\"30px\"}}>(Your vocabulary size is estimated based on all your interactions with our system)</div> */}\n        <div className=\"student_page_report row\" style={{marginLeft:\"-25%\"}}>\n        <div className=\"col-lg-3 row\">\n        </div>\n        <div className=\"col-lg-9 row\">\n          {['1','2','3','4','5','6'].map((value, index) => {\n           return(\n             <div className=\"scoreCell card\" style={{width: (100 / 6).toString() + \"%\"}}>\n               {value}&#9734;\n             </div>\n           )\n          })\n          }\n         </div>\n        <div className=\"col-lg-3 row\">\n        </div>\n        {this.renderScoreCell(this.state.studentReport)}\n        </div>\n        <br />\n        <br />\n        <div className=\"row\" style={{justifyContent: \"center\"}}>\n            <button className=\"button blue\" onClick={() => {this.setState({activePage: \"login\"})}}>Logout</button>\n        </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n\n  renderReport() {\n    // let activeReport = this.state.detailedReport[this.state.ARI]\n    let activeReport = this.state.detailedReport[0]\n    return (\n      <div>\n\t  \t<br />\n\t  \t<br />\n        <h1> Report </h1>\n    {this.state.detailedReport.map((activeReport, index) => {\n      return ( \n        <div>\n        <h2>{activeReport[\"test_code\"]}</h2>\n        <div className=\"row\">\n          <div className=\"column\">\n            <div className=\"card\" style={{borderRadius: 10 }}>\n              <h4>Hits</h4><br />\n              <h2>{activeReport[\"metrics\"][\"hits\"]}</h2>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"card\" style={{borderRadius: 10 }}>\n              <h4>False Hits</h4><br />\n              <h2>{activeReport[\"metrics\"][\"false_hits\"]}</h2>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"card\" style={{borderRadius: 10 }}>\n              <h4>Score</h4><br />\n              <h2>{activeReport[\"metrics\"][\"score\"]}</h2>\n            </div>\n          </div>\n        </div>\n            <div className=\"row\">\n            {activeReport[\"tokens\"].map((value, index) => {\n              return (\n                <div className=\"column col-md-3 col-sm-4\" key={index}>\n            {this.renderReportCard(activeReport[\"evaluated_responses\"][index], value)}\n                </div>\n              )\n            })}\n          </div>\n          <div className='row'>\n            <button className='button back' onClick={() => {this.setState({activePage: 'teacherlanding1'})}}> &#8617; </button>\n          </div>\n      <br />\n      <br />\n      </div>\n      )\n    })}\n      </div>\n    );\n  }\n\n  renderMiniReport() {\n    return ( \n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n    {this.renderCheckoutbar()}\n\t  \t<br />\n\t  \t<br />\n\t\t<div className=\"row\">\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>Hits</h4><br />\n\t\t\t    <h2>{this.state.result[\"hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t  <div className=\"card\" style={{borderRadius: 10 }}>\n\t\t\t    <h4>False Hits</h4><br />\n\t\t\t    <h2>{this.state.result[\"false_hits\"]}</h2>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n        <div className=\"row\">\n           <button style={{borderRadius: 10}} onClick={() => {this.nextTest()}} > Next {this.state.activeTestIndex + 1} </button>\n        </div>\n      </div>\n    );\n  }\n\n  renderScore() {\n    return ( \n      <div className=\"canvas\">\n\t\t{this.renderHeader()}\n    {this.renderCheckoutbar()}\n\t  \t<br />\n\t  \t<br />\n        <div className=\"scoreboard\">\n          <div>\n\t\t\t\t<div className=\"scoreFeedback\">Your score is</div>\n        </div>\n\t\t\t<div className=\"row\">\t\n        <br />\n\t\t\t\t<div className=\"scorecard\">{this.state.result[\"score\"]}</div>\n      </div>\n      <div>\n\t\t\t\t<div className=\"scoreFeedback\">{this.state.result[\"message\"]}</div>\n\t\t\t</div> \n            <div className=\"row\">\n               <button className=\"button\" style={{borderRadius: 10, margin:\"40px auto\"}} onClick={() => {this.nextTest()}} > Next </button>\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderReportCard (selection, value) {\n  var bgColor;\n  var isFake;\n\tvar textColor = \"black\";\n\tif (selection === \"yes\") {\n\t\tbgColor = \"#01a22bcc\";\n\t} else if (selection === \"wrong\") {\n    // bgColor = \"#c51a0988\";\n    bgColor = \"repeating-linear-gradient(45deg, rgba(197, 26, 9, 0.6), rgba(197, 26, 9, 0.6) 10px, rgba(197, 26, 9, 0.8) 10px, rgba(197, 26, 9, 0.8) 20px)\"\n\t\ttextColor = \"white\";\n  } else if(selection === \"unknown\")\n   {\n\t\t// bgColor = \"#004cc5bb\";\n\t\tbgColor = \"#c51a09cc\";\n\t\ttextColor = \"white\";\n  } else {\n    // bgColor = \"grey\";\n    bgColor = \"repeating-linear-gradient( 45deg, rgba(1, 162, 43, 0.6), rgba(1, 162, 43, 0.6) 10px, rgba(1, 162, 43, 0.8) 10px, rgba(1, 162, 43, 0.8) 20px )\"\n\t\t// bgColor = \"#01a22b88\";\n\t\t// textColor = \"white\";\n\t}\n\treturn (\n    \t<div className=\"card report_card\" style={{color: textColor, background: bgColor}}>\n    \t  <h4 style={{textAlign: \"center\", display: \"table-cell\"}}> {value}</h4>\n    \t</div>\n\t );\n  }\n\n  render() {\n    return (\n        <div className= \"container\">\n        {this.pages[this.state.activePage]()}\n        {this.state.isLoading ?\n          <div className=\"overlay\">\n            <div className=\"lds-roller\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div> : null\n        }\n        </div>\n    ); \n  }\n\n}\n\nexport default App;\n\nclass Tabs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 0\n    }\n  }\n  \n  clickHandler = (e) => {\n    this.setState({\n      active: parseInt(e.currentTarget.attributes.num.value)\n    })\n  }\n  \n  render() {\n    let content = \"\";\n    const tabs = this.props.data.map(([label, text], i) => {\n      content = this.state.active === i ? text : content;  \n      return <li \n               className={this.state.active === i ? \"tab active\" : \"tab\" } \n               key={label} \n               num={i}\n               onClick={this.clickHandler}>\n        {label}\n      </li>;\n    });\n    \n    return ( \n      <section className=\"tabs\">\n        <menu>\n          <ul>\n            {tabs}\n          </ul>\n        </menu>\n        <div>\n          {content}\n        </div>\n      </section>);\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}